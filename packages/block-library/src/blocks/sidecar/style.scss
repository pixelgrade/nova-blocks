@import 'scss/mixins';
@import 'scss/block-content-alignments';
@import 'scss/utility';

// This is where magic starts.
:is(.novablocks-sidecar, .novablocks-content) {
  position: relative;
  align-items: start;
  @include nb-content-layout-grid;
}

.novablocks-sidebar,
.novablocks-content {

  @include above(lap) {
    grid-row: 1;
  }
}

.novablocks-sidebar {
  height: 100%;
  z-index: 2;

  > * {
    z-index: 2;
  }

  // Below 1024px everything is shown on one column, so we need to add a margin top to the sidebar.
  @include below(lap) {
    // @todo maybe var(--element-spacing) is the proper gap to be used here
    margin-top: var(--nb-sidecar-grid-gap);
  }
}

// Apply top and bottom spacing
// on all blocks inside content
// and sidebar.
.novablocks-content,
.novablocks-sidebar {
  @include block-spacing-reset;

  > * {
    @include block-spacing;
  }
}

.novablocks-content {
  order: -1;
}

// Default sidebar position is on the right, so it will be positioned between [ge] and block-limit-right.
@include above(lap) {

  .novablocks-sidecar {

    > .novablocks-content:not(:only-child) {
      --block-content-start: var(--block-limit-left);
      --block-content-end: var(--block-limit-right);
    }
  }

  .nb-sidecar--sidebar-left {

    > .novablocks-content {
      --block-limit-left: cs;
    }

    > .novablocks-sidebar {
      --block-content-start: ws;
      --block-content-end: gs;
    }
  }

  .nb-sidecar--sidebar-right {

    > .novablocks-content {
      --block-limit-right: ce;
    }

    > .novablocks-sidebar {
      --block-content-start: ge;
      --block-content-end: we;
    }
  }
}

// Make last block from Sidebar Sticky
.last-block-is-sticky {
  
  .novablocks-sidebar {
    
    >:last-child {
      position: sticky;
      top: var(--sticky-element-top-spacing, 0);
      margin-bottom: 1em;
      
      transition: var(--nb-transition);
      transition-property: opacity;

      @include above(lap) {

        &.novablocks-hidden-block {
          opacity: 0;
        }
      }
    }
  }
}


// Sidebar width overrides
@each $size in small, medium, large {
  @each $side in left, right {
    .nb-sidecar--sidebar-#{$side}.nb-sidecar--sidebar-#{$size} {
      --nb-sidecar-sidebar-#{$side}-width:  var(--nb-sidecar-sidebar-#{$size}-width);
    }
  }
}
