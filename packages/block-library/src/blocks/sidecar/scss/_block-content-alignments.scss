.alignfull,
[data-align='full']{
  --block-content-start: fs;
  --block-content-end: fe;
}

.alignwide,
[data-align='wide'] {
  --block-content-start: ws;
  --block-content-end: we;
}

.stop-right,
.stop-right * {
  --block-content-end: ce;
}

.stop-left,
.stop-left * {
  --block-content-start: cs;
}

.alignleft,
.pull-left,
[data-novablocks-alignment='pull-left'] {
    
  --block-content-start: ws;
  --block-content-end: gs;

  &.stop-left {
  
    --block-content-start: ge;
    --block-content-end: we;
  
    + *:not([class*='align']) {
      --block-content-end: ce;
    }
  }
}

.alignright,
.pull-right,
[data-novablocks-alignment='pull-right'] {
  
  --block-content-start: ge;
  --block-content-end: we;

  &.stop-right {
    --block-content-start: ws;
    --block-content-end: gs;
  
    + *:not([class*='align']) {
      --block-content-start: cs;
    }
  }
}

.alignright,
.alignleft,
.pull-right,
.pull-left {
  grid-row-end: span 3;
}

// ALIGNMENTS
// There are four types of alignments available,
// besides the classic left, right and center.
// 1) Alignfull - This align will help element to break
// out of the container, and make it full screen.
// 2) Wide - This align will help element to break
// out of container, to be slightly bigger than content,
// based on yout settings.
// 3) Pull Right - This align will pull element outside
// of the content on the right side.
// 4) Pul Left - This align will pull element outside
//// of the content on the left side.

// To have more flexibility, our choice for full
// and wide alignments is using negative margins.
// Values used for negative margins,
// are adjusted based on layout type.
// The math behind them should be really simple,
// however, we do not recommend altering them.
// Please keep in mind that this alignments will work,
// as long as there is enough space available on the screen.
// Proceed with caution!

.novablocks-content {
  display: block;
  grid-column: var(--block-content-start)/var(--block-content-end);
  position: relative;
}

// RIGHT SIDEBAR
.novablocks-sidecar {
  
  --minimum-sidebar-width: var(--minimum-sidebar-right-width);
  
  .novablocks-content:not(:only-child) {

    // There is not space on the left side,
    // so we are going to treat pull left as pull right.
    .pull-left {
        --block-content-start: ge;
        --block-content-end: we;
  
        + *:not([class*='align']) {
          --block-content-end: ce;
        }
      
      // In case that there is not enough space,
      // We are going to treat it as an regular align left
      // inside content.
        &.stop-right {
          --block-content-start: ws;
          --block-content-end: gs;
  
        + *:not([class*='align']) {
          --block-content-start: cs;
        }
      }
    }
  }
}

// LEFT SIDEBAR
.novablocks-sidecar--sidebar-left {
  
  --minimum-sidebar-width: var(--minimum-sidebar-left-width);
  
  .novablocks-content:not(:only-child) {
  
    .pull-right {
    
      &[class*='stop'] {
        --block-content-start: ge;
        --block-content-end: we;
      }
  
      + *:not([class*='align']) {
        --block-content-end: ce;
      }
    }
    
    .pull-left {
      --block-content-start: ws;
      --block-content-end: gs;
  
      // There is not space on the left side,
      // so we are going to treat pull left as pull right.
      &.stop-left {
        --block-content-start: ge;
        --block-content-end: we;
      }
    }
  
  }
}

// TWO SIDEBARS
.novablocks-sidecar--complex {
  
  .novablocks-content:not(:only-child) {
  
    .pull-left {
      
      --block-content-start: ws;
      --block-content-end: gs;
  
      // There is not space on the left side,
      // so we are going to treat pull left as pull right.
      &.stop-left {
        --block-content-start: cs;
        --block-content-end: ce;
      }
    }
  
    .pull-right {
    
      --block-content-start: ge;
      --block-content-end: we;
    
      // There is not space on the left side,
      // so we are going to treat pull left as pull right.
      &.stop-right {
        --block-content-start: cs;
        --block-content-end: ce;
      }
    }
  
  }
}

// SIDECAR IN SIDECAR
.novablocks-sidecar:not(.ignore-block) {
  
  // Sidecar with Sidebar Left
  // inside Sidecar with Sidebar Right
  .novablocks-sidecar {
  
    .novablocks-content {
      --block-content-start: cs;
      --block-content-end: ce;
    }
  }
  
  // Sidecar with Sidebar Right
  // inside Sidecar with Sidebar Left
  
  &.novablocks-sidecar--sidebar-left {
    
    .novablocks-sidecar {
  
      .novablocks-sidebar {
        
        grid-column: ge/var(--block-limit-right);
      }
    }
  }
}

.novablocks-content {
  
  .alignfull {
    margin-left: calc(-1 * var(--novablocks-container-spacings));
    margin-right: calc(-1 * var(--novablocks-container-spacings));
    
    @include above(lap) {
      &.stop-left {
        margin-left: 0;
      }
  
      &.stop-right {
        margin-right: 0;
      }
    }
  }
}

.novablocks-sidebar {
  
  .alignfull {
    margin-left: 0;
    margin-right: 0;
  }
}

.novablocks-sidecar:not(.ignore-block) {
  
  .novablocks-collection {
    margin-left: 0;
    margin-right: 0;
  }
}

.alignleft + *:not([class*='align']) {
  --block-content-start: cs;
}
