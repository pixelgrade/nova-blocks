$grid-selector: '.block-editor-inner-blocks > .block-editor-block-list__layout';
$align-selectors: '[data-align="full"], [data-align="wide"], [data-novablocks-alignment="pull-left"], [data-novablocks-alignment="pull-right"]';

@import 'scss/mixins';

.block-editor-block-list__layout.is-root-container {
  @include layout-grid;
  @include layout-settings;
  
  @import 'scss/block-limits.scss';
  
  grid-auto-flow: row dense;
  
  .wp-block[data-align="wide"] {
    max-width: 100% !important;
  }
  
  >  * {
    grid-column: var(--block-content-start) / var(--block-content-end);
    align-self: flex-start;
    
    
    // Temporary
    //@todo: Remove this
    max-width: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  
  > [data-type='novablocks/sidecar'] {
    grid-column: var(--all-columns);
  }
  
  // Markup is different compared to front-end,
  // and because of that, the last block is
  // currently not sticky inside the editor.
  .last-block-is-sticky > :last-child {
    z-index: 1;
  }
}

// Reset alignments
.novablocks-content {
  
  > #{$grid-selector} {
    
    > * {
      // Temporary
      // @todo: Remove this
      max-width: 100% !important;
      margin-left: 0 !important;
      margin-right: 0 !important;
    }
  }
}
.novablocks-layout > #{$grid-selector} {
  
  @include layout-grid;
  
  > * {
    // Temporary
    // @todo: Remove this
    margin-top: 0 !important;
    max-width: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
  
  [class*="__inner-container"]:not(.novablocks-card__layout-content) {
    padding-left: 0;
    padding-right: 0;
  }
}

// The default layout is Content Left with Sidebar Right.
// Content will always be the first child of layout block,
// and it will change it's grid position, according
// to sidebar position (left or right).
.novablocks-layout {
  
    &,
    #{$align-selectors} {
      --block-content-start: var(--block-limit-left);
      --block-content-end: ce;
    }
  
  > #{$grid-selector} {
  
    > * {
      grid-row: 1;
    }
  
    @include layout-grid;
  
    // Content
    > :first-child {
    
      grid-column: var(--all-columns);
    
      > .wp-block-novablocks-sidecar-area {
      
        > #{$grid-selector} {
        
          @include layout-grid;
        
          > * {
            grid-column: var(--block-content-start)/var(--block-content-end);
          }
        
          [data-type='novablocks/sidecar'] {
            grid-column: var(--all-columns);
          }
        }
      }
    }
  
    // Sidebar
    > :last-child {
      grid-column: ge/var(--block-limit-right);
    }
  }
  
  &--sidebar-left {
  
    &,
    #{$align-selectors} {
      --block-content-start: cs;
      --block-content-end: var(--block-limit-right);
    }
  
    > #{$grid-selector} {
  
      // Sidebar
      > :last-child {
        grid-column: var(--block-limit-left)/gs;
        z-index: 2;
      }
    }
  }
  
  .novablocks-content,
  &--sidebar-left,
  &--sidebar-right,
  &--complex {
    display: block;
  }
}

// Block Grid
.novablocks-layout {
  
  &--complex {
  
    &,
    #{$align-selectors} {
      --block-content-start: cs;
      --block-content-end: ce;
    }
    
    > #{$grid-selector} {
      
      > * {
        grid-row: 1;
      }
      
      // Sidebar Left
      >:first-child {
        grid-column: var(--block-limit-left)/gs;
  
        // We need this z-index, to make sure that
        // we can select blocks that are inside the sidebar.
        z-index: 2;
      }
      
      // Content
      >:not(:first-child):not(:last-child) {
        
        grid-column: var(--all-columns);
        
        > .novablocks-content {
          
          > #{$grid-selector} {
            
            @include layout-grid;
            
            > * {
              grid-column: var(--block-content-start)/var(--block-content-end);
            }
          }
        }
      }
      
      // Sidebar Right
      >:last-child {
        grid-column: ge/var(--block-limit-right);
        
        // We need this z-index, to make sure that
        // we can select blocks that are inside the sidebar.
        z-index: 2;
      }
    }
  }
}

.novablocks-layout--sidebar-right .novablocks-layout--sidebar-left,
.novablocks-layout--sidebar-left .novablocks-layout--sidebar-right {
  
  #{$align-selectors} {
    --block-content-start: cs;
    --block-content-end: ce;
  }
}

.novablocks-layout--sidebar-right .novablocks-layout--sidebar-right {
  --block-content-start: var(--block-limit-left);
  --block-content-end: ce;
}

// Show grid lines
.novablocks-sidebar,
.novablocks-content {
  > #{$grid-selector} {
    @include grid-border;
  }
}

[data-type="novablocks/sidecar-area"] {
  &.is-highlighted,
  &.is-selected,
  &.has-child-selected {
    
    &:after {
      box-shadow: none !important;
    }
    
    &.is-highlighted {
      
      .novablocks-content,
      .novablocks-sidebar {
    
        > #{$grid-selector} {
      
          &:after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            grid-column: var(--block-content-start)/var(--block-content-end);
            box-shadow: 0 0 0 2px #007cba;
            box-shadow: 0 0 0 var(--wp-admin-border-width-focus) var(--wp-admin-theme-color);
            border-radius: 1px;
            outline: 2px solid transparent;
          }
        }
      }
    }
    
  }
}

[data-type="novablocks/sidecar"] {
  
  [data-align="full"] {
    --block-content-start: ws;
  }
  
  [data-type="novablocks/sidecar"] {
  
    .novablocks-content {
      [data-align="full"],
      [data-align="wide"] {
        --block-content-start: cs;
        --block-content-end: ce;
      }
    }
  }
  
  .novablocks-layout--sidebar-left {
  
    [data-align="full"] {
      --block-content-start: cs;
      --block-content-end: we;
    }
  }
}
