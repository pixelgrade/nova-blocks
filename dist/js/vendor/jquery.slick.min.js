/*! For license information please see jquery.slick.min.js.LICENSE */
!function(t){var n={};function e(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,e),s.l=!0,s.exports}e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var s in t)e.d(i,s,function(n){return t[n]}.bind(null,s));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s="./dist/js/vendor/jquery.slick.js")}({"./dist/js/vendor/jquery.slick.js":function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.8.1\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n;(function(factory) {\n\t'use strict';\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"jquery\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}(function($) {\n\t'use strict';\n\tvar Slick = window.Slick || {};\n\n\tSlick = (function() {\n\n\t\tvar instanceUid = 0;\n\n\t\tfunction Slick(element, settings) {\n\n\t\t\tvar _ = this, dataSettings;\n\n\t\t\t_.defaults = {\n\t\t\t\taccessibility: true,\n\t\t\t\tadaptiveHeight: false,\n\t\t\t\tappendArrows: $(element),\n\t\t\t\tappendDots: $(element),\n\t\t\t\tarrows: true,\n\t\t\t\tasNavFor: null,\n\t\t\t\tprevArrow: '<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',\n\t\t\t\tnextArrow: '<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',\n\t\t\t\tautoplay: false,\n\t\t\t\tautoplaySpeed: 3000,\n\t\t\t\tcenterMode: false,\n\t\t\t\tcenterPadding: '50px',\n\t\t\t\tcssEase: 'ease',\n\t\t\t\tcustomPaging: function(slider, i) {\n\t\t\t\t\treturn $('<button type=\"button\" />').text(i + 1);\n\t\t\t\t},\n\t\t\t\tdots: false,\n\t\t\t\tdotsClass: 'slick-dots',\n\t\t\t\tdraggable: true,\n\t\t\t\teasing: 'linear',\n\t\t\t\tedgeFriction: 0.35,\n\t\t\t\tfade: false,\n\t\t\t\tfocusOnSelect: false,\n\t\t\t\tfocusOnChange: false,\n\t\t\t\tinfinite: true,\n\t\t\t\tinitialSlide: 0,\n\t\t\t\tlazyLoad: 'ondemand',\n\t\t\t\tmobileFirst: false,\n\t\t\t\tpauseOnHover: true,\n\t\t\t\tpauseOnFocus: true,\n\t\t\t\tpauseOnDotsHover: false,\n\t\t\t\trespondTo: 'window',\n\t\t\t\tresponsive: null,\n\t\t\t\trows: 1,\n\t\t\t\trtl: false,\n\t\t\t\tslide: '',\n\t\t\t\tslidesPerRow: 1,\n\t\t\t\tslidesToShow: 1,\n\t\t\t\tslidesToScroll: 1,\n\t\t\t\tspeed: 500,\n\t\t\t\tswipe: true,\n\t\t\t\tswipeToSlide: false,\n\t\t\t\ttouchMove: true,\n\t\t\t\ttouchThreshold: 5,\n\t\t\t\tuseCSS: true,\n\t\t\t\tuseTransform: true,\n\t\t\t\tvariableWidth: false,\n\t\t\t\tvertical: false,\n\t\t\t\tverticalSwiping: false,\n\t\t\t\twaitForAnimate: true,\n\t\t\t\tzIndex: 1000\n\t\t\t};\n\n\t\t\t_.initials = {\n\t\t\t\tanimating: false,\n\t\t\t\tdragging: false,\n\t\t\t\tautoPlayTimer: null,\n\t\t\t\tcurrentDirection: 0,\n\t\t\t\tcurrentLeft: null,\n\t\t\t\tcurrentSlide: 0,\n\t\t\t\tdirection: 1,\n\t\t\t\t$dots: null,\n\t\t\t\tlistWidth: null,\n\t\t\t\tlistHeight: null,\n\t\t\t\tloadIndex: 0,\n\t\t\t\t$nextArrow: null,\n\t\t\t\t$prevArrow: null,\n\t\t\t\tscrolling: false,\n\t\t\t\tslideCount: null,\n\t\t\t\tslideWidth: null,\n\t\t\t\t$slideTrack: null,\n\t\t\t\t$slides: null,\n\t\t\t\tsliding: false,\n\t\t\t\tslideOffset: 0,\n\t\t\t\tswipeLeft: null,\n\t\t\t\tswiping: false,\n\t\t\t\t$list: null,\n\t\t\t\ttouchObject: {},\n\t\t\t\ttransformsEnabled: false,\n\t\t\t\tunslicked: false\n\t\t\t};\n\n\t\t\t$.extend(_, _.initials);\n\n\t\t\t_.activeBreakpoint = null;\n\t\t\t_.animType = null;\n\t\t\t_.animProp = null;\n\t\t\t_.breakpoints = [];\n\t\t\t_.breakpointSettings = [];\n\t\t\t_.cssTransitions = false;\n\t\t\t_.focussed = false;\n\t\t\t_.interrupted = false;\n\t\t\t_.hidden = 'hidden';\n\t\t\t_.paused = true;\n\t\t\t_.positionProp = null;\n\t\t\t_.respondTo = null;\n\t\t\t_.rowCount = 1;\n\t\t\t_.shouldClick = true;\n\t\t\t_.$slider = $(element);\n\t\t\t_.$slidesCache = null;\n\t\t\t_.transformType = null;\n\t\t\t_.transitionType = null;\n\t\t\t_.visibilityChange = 'visibilitychange';\n\t\t\t_.windowWidth = 0;\n\t\t\t_.windowTimer = null;\n\n\t\t\tdataSettings = $(element).data('slick') || {};\n\n\t\t\t_.options = $.extend({}, _.defaults, settings, dataSettings);\n\n\t\t\t_.currentSlide = _.options.initialSlide;\n\n\t\t\t_.originalSettings = _.options;\n\n\t\t\tif (typeof document.mozHidden !== 'undefined') {\n\t\t\t\t_.hidden = 'mozHidden';\n\t\t\t\t_.visibilityChange = 'mozvisibilitychange';\n\t\t\t} else if (typeof document.webkitHidden !== 'undefined') {\n\t\t\t\t_.hidden = 'webkitHidden';\n\t\t\t\t_.visibilityChange = 'webkitvisibilitychange';\n\t\t\t}\n\n\t\t\t_.autoPlay = $.proxy(_.autoPlay, _);\n\t\t\t_.autoPlayClear = $.proxy(_.autoPlayClear, _);\n\t\t\t_.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n\t\t\t_.changeSlide = $.proxy(_.changeSlide, _);\n\t\t\t_.clickHandler = $.proxy(_.clickHandler, _);\n\t\t\t_.selectHandler = $.proxy(_.selectHandler, _);\n\t\t\t_.setPosition = $.proxy(_.setPosition, _);\n\t\t\t_.swipeHandler = $.proxy(_.swipeHandler, _);\n\t\t\t_.dragHandler = $.proxy(_.dragHandler, _);\n\t\t\t_.keyHandler = $.proxy(_.keyHandler, _);\n\n\t\t\t_.instanceUid = instanceUid++;\n\n\t\t\t// A simple way to check for HTML strings\n\t\t\t// Strict HTML recognition (must start with <)\n\t\t\t// Extracted from jQuery v1.11 source\n\t\t\t_.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n\t\t\t_.registerBreakpoints();\n\t\t\t_.init(true);\n\n\t\t}\n\n\t\treturn Slick;\n\n\t}());\n\n\tSlick.prototype.activateADA = function() {\n\t\tvar _ = this;\n\n\t\t_.$slideTrack.find('.slick-active').attr({\n\t\t\t'aria-hidden': 'false'\n\t\t}).find('a, input, button, select').attr({\n\t\t\t'tabindex': '0'\n\t\t});\n\n\t};\n\n\tSlick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n\t\tvar _ = this;\n\n\t\tif (typeof(index) === 'boolean') {\n\t\t\taddBefore = index;\n\t\t\tindex = null;\n\t\t} else if (index < 0 || (index >= _.slideCount)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t_.unload();\n\n\t\tif (typeof(index) === 'number') {\n\t\t\tif (index === 0 && _.$slides.length === 0) {\n\t\t\t\t$(markup).appendTo(_.$slideTrack);\n\t\t\t} else if (addBefore) {\n\t\t\t\t$(markup).insertBefore(_.$slides.eq(index));\n\t\t\t} else {\n\t\t\t\t$(markup).insertAfter(_.$slides.eq(index));\n\t\t\t}\n\t\t} else {\n\t\t\tif (addBefore === true) {\n\t\t\t\t$(markup).prependTo(_.$slideTrack);\n\t\t\t} else {\n\t\t\t\t$(markup).appendTo(_.$slideTrack);\n\t\t\t}\n\t\t}\n\n\t\t_.$slides = _.$slideTrack.children(this.options.slide);\n\n\t\t_.$slideTrack.children(this.options.slide).detach();\n\n\t\t_.$slideTrack.append(_.$slides);\n\n\t\t_.$slides.each(function(index, element) {\n\t\t\t$(element).attr('data-slick-index', index);\n\t\t});\n\n\t\t_.$slidesCache = _.$slides;\n\n\t\t_.reinit();\n\n\t};\n\n\tSlick.prototype.animateHeight = function() {\n\t\tvar _ = this;\n\t\tif (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n\t\t\tvar targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n\t\t\t_.$list.animate({\n\t\t\t\theight: targetHeight\n\t\t\t}, _.options.speed);\n\t\t}\n\t};\n\n\tSlick.prototype.animateSlide = function(targetLeft, callback) {\n\n\t\tvar animProps = {},\n\t\t\t_ = this;\n\n\t\t_.animateHeight();\n\n\t\tif (_.options.rtl === true && _.options.vertical === false) {\n\t\t\ttargetLeft = -targetLeft;\n\t\t}\n\t\tif (_.transformsEnabled === false) {\n\t\t\tif (_.options.vertical === false) {\n\t\t\t\t_.$slideTrack.animate({\n\t\t\t\t\tleft: targetLeft\n\t\t\t\t}, _.options.speed, _.options.easing, callback);\n\t\t\t} else {\n\t\t\t\t_.$slideTrack.animate({\n\t\t\t\t\ttop: targetLeft\n\t\t\t\t}, _.options.speed, _.options.easing, callback);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif (_.cssTransitions === false) {\n\t\t\t\tif (_.options.rtl === true) {\n\t\t\t\t\t_.currentLeft = -(_.currentLeft);\n\t\t\t\t}\n\t\t\t\t$({\n\t\t\t\t\tanimStart: _.currentLeft\n\t\t\t\t}).animate({\n\t\t\t\t\tanimStart: targetLeft\n\t\t\t\t}, {\n\t\t\t\t\tduration: _.options.speed,\n\t\t\t\t\teasing: _.options.easing,\n\t\t\t\t\tstep: function(now) {\n\t\t\t\t\t\tnow = Math.ceil(now);\n\t\t\t\t\t\tif (_.options.vertical === false) {\n\t\t\t\t\t\t\tanimProps[_.animType] = 'translate(' +\n\t\t\t\t\t\t\t\tnow + 'px, 0px)';\n\t\t\t\t\t\t\t_.$slideTrack.css(animProps);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tanimProps[_.animType] = 'translate(0px,' +\n\t\t\t\t\t\t\t\tnow + 'px)';\n\t\t\t\t\t\t\t_.$slideTrack.css(animProps);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tcallback.call();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\t_.applyTransition();\n\t\t\t\ttargetLeft = Math.ceil(targetLeft);\n\n\t\t\t\tif (_.options.vertical === false) {\n\t\t\t\t\tanimProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n\t\t\t\t} else {\n\t\t\t\t\tanimProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n\t\t\t\t}\n\t\t\t\t_.$slideTrack.css(animProps);\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tsetTimeout(function() {\n\n\t\t\t\t\t\t_.disableTransition();\n\n\t\t\t\t\t\tcallback.call();\n\t\t\t\t\t}, _.options.speed);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.getNavTarget = function() {\n\n\t\tvar _ = this,\n\t\t\tasNavFor = _.options.asNavFor;\n\n\t\tif ( asNavFor && asNavFor !== null ) {\n\t\t\tasNavFor = $(asNavFor).not(_.$slider);\n\t\t}\n\n\t\treturn asNavFor;\n\n\t};\n\n\tSlick.prototype.asNavFor = function(index) {\n\n\t\tvar _ = this,\n\t\t\tasNavFor = _.getNavTarget();\n\n\t\tif ( asNavFor !== null && typeof asNavFor === 'object' ) {\n\t\t\tasNavFor.each(function() {\n\t\t\t\tvar target = $(this).slick('getSlick');\n\t\t\t\tif(!target.unslicked) {\n\t\t\t\t\ttarget.slideHandler(index, true);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t};\n\n\tSlick.prototype.applyTransition = function(slide) {\n\n\t\tvar _ = this,\n\t\t\ttransition = {};\n\n\t\tif (_.options.fade === false) {\n\t\t\ttransition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n\t\t} else {\n\t\t\ttransition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n\t\t}\n\n\t\tif (_.options.fade === false) {\n\t\t\t_.$slideTrack.css(transition);\n\t\t} else {\n\t\t\t_.$slides.eq(slide).css(transition);\n\t\t}\n\n\t};\n\n\tSlick.prototype.autoPlay = function() {\n\n\t\tvar _ = this;\n\n\t\t_.autoPlayClear();\n\n\t\tif ( _.slideCount > _.options.slidesToShow ) {\n\t\t\t_.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n\t\t}\n\n\t};\n\n\tSlick.prototype.autoPlayClear = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.autoPlayTimer) {\n\t\t\tclearInterval(_.autoPlayTimer);\n\t\t}\n\n\t};\n\n\tSlick.prototype.autoPlayIterator = function() {\n\n\t\tvar _ = this,\n\t\t\tslideTo = _.currentSlide + _.options.slidesToScroll;\n\n\t\tif ( !_.paused && !_.interrupted && !_.focussed ) {\n\n\t\t\tif ( _.options.infinite === false ) {\n\n\t\t\t\tif ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n\t\t\t\t\t_.direction = 0;\n\t\t\t\t}\n\n\t\t\t\telse if ( _.direction === 0 ) {\n\n\t\t\t\t\tslideTo = _.currentSlide - _.options.slidesToScroll;\n\n\t\t\t\t\tif ( _.currentSlide - 1 === 0 ) {\n\t\t\t\t\t\t_.direction = 1;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_.slideHandler( slideTo );\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.buildArrows = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.arrows === true ) {\n\n\t\t\t_.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n\t\t\t_.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n\t\t\tif( _.slideCount > _.options.slidesToShow ) {\n\n\t\t\t\t_.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\t\t\t\t_.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n\t\t\t\tif (_.htmlExpr.test(_.options.prevArrow)) {\n\t\t\t\t\t_.$prevArrow.prependTo(_.options.appendArrows);\n\t\t\t\t}\n\n\t\t\t\tif (_.htmlExpr.test(_.options.nextArrow)) {\n\t\t\t\t\t_.$nextArrow.appendTo(_.options.appendArrows);\n\t\t\t\t}\n\n\t\t\t\tif (_.options.infinite !== true) {\n\t\t\t\t\t_.$prevArrow\n\t\t\t\t\t\t.addClass('slick-disabled')\n\t\t\t\t\t\t.attr('aria-disabled', 'true');\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_.$prevArrow.add( _.$nextArrow )\n\n\t\t\t\t\t.addClass('slick-hidden')\n\t\t\t\t\t.attr({\n\t\t\t\t\t\t'aria-disabled': 'true',\n\t\t\t\t\t\t'tabindex': '-1'\n\t\t\t\t\t});\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.buildDots = function() {\n\n\t\tvar _ = this,\n\t\t\ti, dot;\n\n\t\tif (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n\t\t\t_.$slider.addClass('slick-dotted');\n\n\t\t\tdot = $('<ul />').addClass(_.options.dotsClass);\n\n\t\t\tfor (i = 0; i <= _.getDotCount(); i += 1) {\n\t\t\t\tdot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n\t\t\t}\n\n\t\t\t_.$dots = dot.appendTo(_.options.appendDots);\n\n\t\t\t_.$dots.find('li').first().addClass('slick-active');\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.buildOut = function() {\n\n\t\tvar _ = this;\n\n\t\t_.$slides =\n\t\t\t_.$slider\n\t\t\t\t.children( _.options.slide + ':not(.slick-cloned)')\n\t\t\t\t.addClass('slick-slide');\n\n\t\t_.slideCount = _.$slides.length;\n\n\t\t_.$slides.each(function(index, element) {\n\t\t\t$(element)\n\t\t\t\t.attr('data-slick-index', index)\n\t\t\t\t.data('originalStyling', $(element).attr('style') || '');\n\t\t});\n\n\t\t_.$slider.addClass('slick-slider');\n\n\t\t_.$slideTrack = (_.slideCount === 0) ?\n\t\t\t$('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n\t\t\t_.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n\t\t_.$list = _.$slideTrack.wrap(\n\t\t\t'<div class=\"slick-list\"/>').parent();\n\t\t_.$slideTrack.css('opacity', 0);\n\n\t\tif (_.options.centerMode === true || _.options.swipeToSlide === true) {\n\t\t\t_.options.slidesToScroll = 1;\n\t\t}\n\n\t\t$('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n\t\t_.setupInfinite();\n\n\t\t_.buildArrows();\n\n\t\t_.buildDots();\n\n\t\t_.updateDots();\n\n\n\t\t_.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n\t\tif (_.options.draggable === true) {\n\t\t\t_.$list.addClass('draggable');\n\t\t}\n\n\t};\n\n\tSlick.prototype.buildRows = function() {\n\n\t\tvar _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n\t\tnewSlides = document.createDocumentFragment();\n\t\toriginalSlides = _.$slider.children();\n\n\t\tif(_.options.rows > 0) {\n\n\t\t\tslidesPerSection = _.options.slidesPerRow * _.options.rows;\n\t\t\tnumOfSlides = Math.ceil(\n\t\t\t\toriginalSlides.length / slidesPerSection\n\t\t\t);\n\n\t\t\tfor(a = 0; a < numOfSlides; a++){\n\t\t\t\tvar slide = document.createElement('div');\n\t\t\t\tfor(b = 0; b < _.options.rows; b++) {\n\t\t\t\t\tvar row = document.createElement('div');\n\t\t\t\t\tfor(c = 0; c < _.options.slidesPerRow; c++) {\n\t\t\t\t\t\tvar target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n\t\t\t\t\t\tif (originalSlides.get(target)) {\n\t\t\t\t\t\t\trow.appendChild(originalSlides.get(target));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tslide.appendChild(row);\n\t\t\t\t}\n\t\t\t\tnewSlides.appendChild(slide);\n\t\t\t}\n\n\t\t\t_.$slider.empty().append(newSlides);\n\t\t\t_.$slider.children().children().children()\n\t\t\t\t.css({\n\t\t\t\t\t'width':(100 / _.options.slidesPerRow) + '%',\n\t\t\t\t\t'display': 'inline-block'\n\t\t\t\t});\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n\t\tvar _ = this,\n\t\t\tbreakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n\t\tvar sliderWidth = _.$slider.width();\n\t\tvar windowWidth = window.innerWidth || $(window).width();\n\n\t\tif (_.respondTo === 'window') {\n\t\t\trespondToWidth = windowWidth;\n\t\t} else if (_.respondTo === 'slider') {\n\t\t\trespondToWidth = sliderWidth;\n\t\t} else if (_.respondTo === 'min') {\n\t\t\trespondToWidth = Math.min(windowWidth, sliderWidth);\n\t\t}\n\n\t\tif ( _.options.responsive &&\n\t\t\t_.options.responsive.length &&\n\t\t\t_.options.responsive !== null) {\n\n\t\t\ttargetBreakpoint = null;\n\n\t\t\tfor (breakpoint in _.breakpoints) {\n\t\t\t\tif (_.breakpoints.hasOwnProperty(breakpoint)) {\n\t\t\t\t\tif (_.originalSettings.mobileFirst === false) {\n\t\t\t\t\t\tif (respondToWidth < _.breakpoints[breakpoint]) {\n\t\t\t\t\t\t\ttargetBreakpoint = _.breakpoints[breakpoint];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (respondToWidth > _.breakpoints[breakpoint]) {\n\t\t\t\t\t\t\ttargetBreakpoint = _.breakpoints[breakpoint];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetBreakpoint !== null) {\n\t\t\t\tif (_.activeBreakpoint !== null) {\n\t\t\t\t\tif (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n\t\t\t\t\t\t_.activeBreakpoint =\n\t\t\t\t\t\t\ttargetBreakpoint;\n\t\t\t\t\t\tif (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t\t\t\t\t\t\t_.unslick(targetBreakpoint);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_.options = $.extend({}, _.originalSettings,\n\t\t\t\t\t\t\t\t_.breakpointSettings[\n\t\t\t\t\t\t\t\t\ttargetBreakpoint]);\n\t\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\t\t_.currentSlide = _.options.initialSlide;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_.refresh(initial);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_.activeBreakpoint = targetBreakpoint;\n\t\t\t\t\tif (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t\t\t\t\t\t_.unslick(targetBreakpoint);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_.options = $.extend({}, _.originalSettings,\n\t\t\t\t\t\t\t_.breakpointSettings[\n\t\t\t\t\t\t\t\ttargetBreakpoint]);\n\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\t_.currentSlide = _.options.initialSlide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_.refresh(initial);\n\t\t\t\t\t}\n\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (_.activeBreakpoint !== null) {\n\t\t\t\t\t_.activeBreakpoint = null;\n\t\t\t\t\t_.options = _.originalSettings;\n\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t_.currentSlide = _.options.initialSlide;\n\t\t\t\t\t}\n\t\t\t\t\t_.refresh(initial);\n\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// only trigger breakpoints during an actual break. not on initialize.\n\t\t\tif( !initial && triggerBreakpoint !== false ) {\n\t\t\t\t_.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n\t\t\t}\n\t\t}\n\n\t};\n\n\tSlick.prototype.changeSlide = function(event, dontAnimate) {\n\n\t\tvar _ = this,\n\t\t\t$target = $(event.currentTarget),\n\t\t\tindexOffset, slideOffset, unevenOffset;\n\n\t\t// If target is a link, prevent default action.\n\t\tif($target.is('a')) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\t// If target is not the <li> element (ie: a child), find the <li>.\n\t\tif(!$target.is('li')) {\n\t\t\t$target = $target.closest('li');\n\t\t}\n\n\t\tunevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n\t\tindexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n\t\tswitch (event.data.message) {\n\n\t\t\tcase 'previous':\n\t\t\t\tslideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n\t\t\t\tif (_.slideCount > _.options.slidesToShow) {\n\t\t\t\t\t_.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'next':\n\t\t\t\tslideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n\t\t\t\tif (_.slideCount > _.options.slidesToShow) {\n\t\t\t\t\t_.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'index':\n\t\t\t\tvar index = event.data.index === 0 ? 0 :\n\t\t\t\t\tevent.data.index || $target.index() * _.options.slidesToScroll;\n\n\t\t\t\t_.slideHandler(_.checkNavigable(index), false, dontAnimate);\n\t\t\t\t$target.children().trigger('focus');\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t};\n\n\tSlick.prototype.checkNavigable = function(index) {\n\n\t\tvar _ = this,\n\t\t\tnavigables, prevNavigable;\n\n\t\tnavigables = _.getNavigableIndexes();\n\t\tprevNavigable = 0;\n\t\tif (index > navigables[navigables.length - 1]) {\n\t\t\tindex = navigables[navigables.length - 1];\n\t\t} else {\n\t\t\tfor (var n in navigables) {\n\t\t\t\tif (index < navigables[n]) {\n\t\t\t\t\tindex = prevNavigable;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tprevNavigable = navigables[n];\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tSlick.prototype.cleanUpEvents = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.dots && _.$dots !== null) {\n\n\t\t\t$('li', _.$dots)\n\t\t\t\t.off('click.slick', _.changeSlide)\n\t\t\t\t.off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n\t\t\t\t.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n\t\t\tif (_.options.accessibility === true) {\n\t\t\t\t_.$dots.off('keydown.slick', _.keyHandler);\n\t\t\t}\n\t\t}\n\n\t\t_.$slider.off('focus.slick blur.slick');\n\n\t\tif (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t\t\t_.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n\t\t\t_.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\n\t\t\tif (_.options.accessibility === true) {\n\t\t\t\t_.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);\n\t\t\t\t_.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);\n\t\t\t}\n\t\t}\n\n\t\t_.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n\t\t_.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n\t\t_.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n\t\t_.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n\t\t_.$list.off('click.slick', _.clickHandler);\n\n\t\t$(document).off(_.visibilityChange, _.visibility);\n\n\t\t_.cleanUpSlideEvents();\n\n\t\tif (_.options.accessibility === true) {\n\t\t\t_.$list.off('keydown.slick', _.keyHandler);\n\t\t}\n\n\t\tif (_.options.focusOnSelect === true) {\n\t\t\t$(_.$slideTrack).children().off('click.slick', _.selectHandler);\n\t\t}\n\n\t\t$(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n\t\t$(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n\t\t$('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n\t\t$(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\n\t};\n\n\tSlick.prototype.cleanUpSlideEvents = function() {\n\n\t\tvar _ = this;\n\n\t\t_.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n\t\t_.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n\t};\n\n\tSlick.prototype.cleanUpRows = function() {\n\n\t\tvar _ = this, originalSlides;\n\n\t\tif(_.options.rows > 0) {\n\t\t\toriginalSlides = _.$slides.children().children();\n\t\t\toriginalSlides.removeAttr('style');\n\t\t\t_.$slider.empty().append(originalSlides);\n\t\t}\n\n\t};\n\n\tSlick.prototype.clickHandler = function(event) {\n\n\t\tvar _ = this;\n\n\t\tif (_.shouldClick === false) {\n\t\t\tevent.stopImmediatePropagation();\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t};\n\n\tSlick.prototype.destroy = function(refresh) {\n\n\t\tvar _ = this;\n\n\t\t_.autoPlayClear();\n\n\t\t_.touchObject = {};\n\n\t\t_.cleanUpEvents();\n\n\t\t$('.slick-cloned', _.$slider).detach();\n\n\t\tif (_.$dots) {\n\t\t\t_.$dots.remove();\n\t\t}\n\n\t\tif ( _.$prevArrow && _.$prevArrow.length ) {\n\n\t\t\t_.$prevArrow\n\t\t\t\t.removeClass('slick-disabled slick-arrow slick-hidden')\n\t\t\t\t.removeAttr('aria-hidden aria-disabled tabindex')\n\t\t\t\t.css('display','');\n\n\t\t\tif ( _.htmlExpr.test( _.options.prevArrow )) {\n\t\t\t\t_.$prevArrow.remove();\n\t\t\t}\n\t\t}\n\n\t\tif ( _.$nextArrow && _.$nextArrow.length ) {\n\n\t\t\t_.$nextArrow\n\t\t\t\t.removeClass('slick-disabled slick-arrow slick-hidden')\n\t\t\t\t.removeAttr('aria-hidden aria-disabled tabindex')\n\t\t\t\t.css('display','');\n\n\t\t\tif ( _.htmlExpr.test( _.options.nextArrow )) {\n\t\t\t\t_.$nextArrow.remove();\n\t\t\t}\n\t\t}\n\n\n\t\tif (_.$slides) {\n\n\t\t\t_.$slides\n\t\t\t\t.removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n\t\t\t\t.removeAttr('aria-hidden')\n\t\t\t\t.removeAttr('data-slick-index')\n\t\t\t\t.each(function(){\n\t\t\t\t\t$(this).attr('style', $(this).data('originalStyling'));\n\t\t\t\t});\n\n\t\t\t_.$slideTrack.children(this.options.slide).detach();\n\n\t\t\t_.$slideTrack.detach();\n\n\t\t\t_.$list.detach();\n\n\t\t\t_.$slider.append(_.$slides);\n\t\t}\n\n\t\t_.cleanUpRows();\n\n\t\t_.$slider.removeClass('slick-slider');\n\t\t_.$slider.removeClass('slick-initialized');\n\t\t_.$slider.removeClass('slick-dotted');\n\n\t\t_.unslicked = true;\n\n\t\tif(!refresh) {\n\t\t\t_.$slider.trigger('destroy', [_]);\n\t\t}\n\n\t};\n\n\tSlick.prototype.disableTransition = function(slide) {\n\n\t\tvar _ = this,\n\t\t\ttransition = {};\n\n\t\ttransition[_.transitionType] = '';\n\n\t\tif (_.options.fade === false) {\n\t\t\t_.$slideTrack.css(transition);\n\t\t} else {\n\t\t\t_.$slides.eq(slide).css(transition);\n\t\t}\n\n\t};\n\n\tSlick.prototype.fadeSlide = function(slideIndex, callback) {\n\n\t\tvar _ = this;\n\n\t\tif (_.cssTransitions === false) {\n\n\t\t\t_.$slides.eq(slideIndex).css({\n\t\t\t\tzIndex: _.options.zIndex\n\t\t\t});\n\n\t\t\t_.$slides.eq(slideIndex).animate({\n\t\t\t\topacity: 1\n\t\t\t}, _.options.speed, _.options.easing, callback);\n\n\t\t} else {\n\n\t\t\t_.applyTransition(slideIndex);\n\n\t\t\t_.$slides.eq(slideIndex).css({\n\t\t\t\topacity: 1,\n\t\t\t\tzIndex: _.options.zIndex\n\t\t\t});\n\n\t\t\tif (callback) {\n\t\t\t\tsetTimeout(function() {\n\n\t\t\t\t\t_.disableTransition(slideIndex);\n\n\t\t\t\t\tcallback.call();\n\t\t\t\t}, _.options.speed);\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.fadeSlideOut = function(slideIndex) {\n\n\t\tvar _ = this;\n\n\t\tif (_.cssTransitions === false) {\n\n\t\t\t_.$slides.eq(slideIndex).animate({\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: _.options.zIndex - 2\n\t\t\t}, _.options.speed, _.options.easing);\n\n\t\t} else {\n\n\t\t\t_.applyTransition(slideIndex);\n\n\t\t\t_.$slides.eq(slideIndex).css({\n\t\t\t\topacity: 0,\n\t\t\t\tzIndex: _.options.zIndex - 2\n\t\t\t});\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n\t\tvar _ = this;\n\n\t\tif (filter !== null) {\n\n\t\t\t_.$slidesCache = _.$slides;\n\n\t\t\t_.unload();\n\n\t\t\t_.$slideTrack.children(this.options.slide).detach();\n\n\t\t\t_.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n\t\t\t_.reinit();\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.focusHandler = function() {\n\n\t\tvar _ = this;\n\n\t\t// If any child element receives focus within the slider we need to pause the autoplay\n\t\t_.$slider\n\t\t\t.off('focus.slick blur.slick')\n\t\t\t.on(\n\t\t\t\t'focus.slick',\n\t\t\t\t'*',\n\t\t\t\tfunction(event) {\n\t\t\t\t\tvar $sf = $(this);\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tif( _.options.pauseOnFocus ) {\n\t\t\t\t\t\t\tif ($sf.is(':focus')) {\n\t\t\t\t\t\t\t\t_.focussed = true;\n\t\t\t\t\t\t\t\t_.autoPlay();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t).on(\n\t\t\t'blur.slick',\n\t\t\t'*',\n\t\t\tfunction(event) {\n\t\t\t\tvar $sf = $(this);\n\n\t\t\t\t// When a blur occurs on any elements within the slider we become unfocused\n\t\t\t\tif( _.options.pauseOnFocus ) {\n\t\t\t\t\t_.focussed = false;\n\t\t\t\t\t_.autoPlay();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tSlick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n\t\tvar _ = this;\n\t\treturn _.currentSlide;\n\n\t};\n\n\tSlick.prototype.getDotCount = function() {\n\n\t\tvar _ = this;\n\n\t\tvar breakPoint = 0;\n\t\tvar counter = 0;\n\t\tvar pagerQty = 0;\n\n\t\tif (_.options.infinite === true) {\n\t\t\tif (_.slideCount <= _.options.slidesToShow) {\n\t\t\t\t++pagerQty;\n\t\t\t} else {\n\t\t\t\twhile (breakPoint < _.slideCount) {\n\t\t\t\t\t++pagerQty;\n\t\t\t\t\tbreakPoint = counter + _.options.slidesToScroll;\n\t\t\t\t\tcounter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_.options.centerMode === true) {\n\t\t\tpagerQty = _.slideCount;\n\t\t} else if(!_.options.asNavFor) {\n\t\t\tpagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n\t\t}else {\n\t\t\twhile (breakPoint < _.slideCount) {\n\t\t\t\t++pagerQty;\n\t\t\t\tbreakPoint = counter + _.options.slidesToScroll;\n\t\t\t\tcounter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t\t\t}\n\t\t}\n\n\t\treturn pagerQty - 1;\n\n\t};\n\n\tSlick.prototype.getLeft = function(slideIndex) {\n\n\t\tvar _ = this,\n\t\t\ttargetLeft,\n\t\t\tverticalHeight,\n\t\t\tverticalOffset = 0,\n\t\t\ttargetSlide,\n\t\t\tcoef;\n\n\t\t_.slideOffset = 0;\n\t\tverticalHeight = _.$slides.first().outerHeight(true);\n\n\t\tif (_.options.infinite === true) {\n\t\t\tif (_.slideCount > _.options.slidesToShow) {\n\t\t\t\t_.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n\t\t\t\tcoef = -1\n\n\t\t\t\tif (_.options.vertical === true && _.options.centerMode === true) {\n\t\t\t\t\tif (_.options.slidesToShow === 2) {\n\t\t\t\t\t\tcoef = -1.5;\n\t\t\t\t\t} else if (_.options.slidesToShow === 1) {\n\t\t\t\t\t\tcoef = -2\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tverticalOffset = (verticalHeight * _.options.slidesToShow) * coef;\n\t\t\t}\n\t\t\tif (_.slideCount % _.options.slidesToScroll !== 0) {\n\t\t\t\tif (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n\t\t\t\t\tif (slideIndex > _.slideCount) {\n\t\t\t\t\t\t_.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n\t\t\t\t\t\tverticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n\t\t\t\t\t\tverticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (slideIndex + _.options.slidesToShow > _.slideCount) {\n\t\t\t\t_.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n\t\t\t\tverticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n\t\t\t}\n\t\t}\n\n\t\tif (_.slideCount <= _.options.slidesToShow) {\n\t\t\t_.slideOffset = 0;\n\t\t\tverticalOffset = 0;\n\t\t}\n\n\t\tif (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {\n\t\t\t_.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);\n\t\t} else if (_.options.centerMode === true && _.options.infinite === true) {\n\t\t\t_.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n\t\t} else if (_.options.centerMode === true) {\n\t\t\t_.slideOffset = 0;\n\t\t\t_.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n\t\t}\n\n\t\tif (_.options.vertical === false) {\n\t\t\ttargetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n\t\t} else {\n\t\t\ttargetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n\t\t}\n\n\t\tif (_.options.variableWidth === true) {\n\n\t\t\tif (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n\t\t\t\ttargetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t\t\t} else {\n\t\t\t\ttargetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n\t\t\t}\n\n\t\t\tif (_.options.rtl === true) {\n\t\t\t\tif (targetSlide[0]) {\n\t\t\t\t\ttargetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n\t\t\t\t} else {\n\t\t\t\t\ttargetLeft =  0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttargetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t\t\t}\n\n\t\t\tif (_.options.centerMode === true) {\n\t\t\t\tif (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n\t\t\t\t\ttargetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t\t\t\t} else {\n\t\t\t\t\ttargetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n\t\t\t\t}\n\n\t\t\t\tif (_.options.rtl === true) {\n\t\t\t\t\tif (targetSlide[0]) {\n\t\t\t\t\t\ttargetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttargetLeft =  0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttargetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t\t\t\t}\n\n\t\t\t\ttargetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n\t\t\t}\n\t\t}\n\n\t\treturn targetLeft;\n\n\t};\n\n\tSlick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n\t\tvar _ = this;\n\n\t\treturn _.options[option];\n\n\t};\n\n\tSlick.prototype.getNavigableIndexes = function() {\n\n\t\tvar _ = this,\n\t\t\tbreakPoint = 0,\n\t\t\tcounter = 0,\n\t\t\tindexes = [],\n\t\t\tmax;\n\n\t\tif (_.options.infinite === false) {\n\t\t\tmax = _.slideCount;\n\t\t} else {\n\t\t\tbreakPoint = _.options.slidesToScroll * -1;\n\t\t\tcounter = _.options.slidesToScroll * -1;\n\t\t\tmax = _.slideCount * 2;\n\t\t}\n\n\t\twhile (breakPoint < max) {\n\t\t\tindexes.push(breakPoint);\n\t\t\tbreakPoint = counter + _.options.slidesToScroll;\n\t\t\tcounter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t\t}\n\n\t\treturn indexes;\n\n\t};\n\n\tSlick.prototype.getSlick = function() {\n\n\t\treturn this;\n\n\t};\n\n\tSlick.prototype.getSlideCount = function() {\n\n\t\tvar _ = this,\n\t\t\tslidesTraversed, swipedSlide, swipeTarget, centerOffset;\n\n\t\tcenterOffset = _.options.centerMode === true ? Math.floor(_.$list.width() / 2) : 0;\n\t\tswipeTarget = (_.swipeLeft * -1) + centerOffset;\n\n\t\tif (_.options.swipeToSlide === true) {\n\n\t\t\t_.$slideTrack.find('.slick-slide').each(function(index, slide) {\n\n\t\t\t\tvar slideOuterWidth, slideOffset, slideRightBoundary;\n\t\t\t\tslideOuterWidth = $(slide).outerWidth();\n\t\t\t\tslideOffset = slide.offsetLeft;\n\t\t\t\tif (_.options.centerMode !== true) {\n\t\t\t\t\tslideOffset += (slideOuterWidth / 2);\n\t\t\t\t}\n\n\t\t\t\tslideRightBoundary = slideOffset + (slideOuterWidth);\n\n\t\t\t\tif (swipeTarget < slideRightBoundary) {\n\t\t\t\t\tswipedSlide = slide;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tslidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n\t\t\treturn slidesTraversed;\n\n\t\t} else {\n\t\t\treturn _.options.slidesToScroll;\n\t\t}\n\n\t};\n\n\tSlick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n\t\tvar _ = this;\n\n\t\t_.changeSlide({\n\t\t\tdata: {\n\t\t\t\tmessage: 'index',\n\t\t\t\tindex: parseInt(slide)\n\t\t\t}\n\t\t}, dontAnimate);\n\n\t};\n\n\tSlick.prototype.init = function(creation) {\n\n\t\tvar _ = this;\n\n\t\tif (!$(_.$slider).hasClass('slick-initialized')) {\n\n\t\t\t$(_.$slider).addClass('slick-initialized');\n\n\t\t\t_.buildRows();\n\t\t\t_.buildOut();\n\t\t\t_.setProps();\n\t\t\t_.startLoad();\n\t\t\t_.loadSlider();\n\t\t\t_.initializeEvents();\n\t\t\t_.updateArrows();\n\t\t\t_.updateDots();\n\t\t\t_.checkResponsive(true);\n\t\t\t_.focusHandler();\n\n\t\t}\n\n\t\tif (creation) {\n\t\t\t_.$slider.trigger('init', [_]);\n\t\t}\n\n\t\tif (_.options.accessibility === true) {\n\t\t\t_.initADA();\n\t\t}\n\n\t\tif ( _.options.autoplay ) {\n\n\t\t\t_.paused = false;\n\t\t\t_.autoPlay();\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.initADA = function() {\n\t\tvar _ = this,\n\t\t\tnumDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),\n\t\t\ttabControlIndexes = _.getNavigableIndexes().filter(function(val) {\n\t\t\t\treturn (val >= 0) && (val < _.slideCount);\n\t\t\t});\n\n\t\t_.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n\t\t\t'aria-hidden': 'true',\n\t\t\t'tabindex': '-1'\n\t\t}).find('a, input, button, select').attr({\n\t\t\t'tabindex': '-1'\n\t\t});\n\n\t\tif (_.$dots !== null) {\n\t\t\t_.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n\t\t\t\tvar slideControlIndex = tabControlIndexes.indexOf(i);\n\n\t\t\t\t$(this).attr({\n\t\t\t\t\t'role': 'tabpanel',\n\t\t\t\t\t'id': 'slick-slide' + _.instanceUid + i,\n\t\t\t\t\t'tabindex': -1\n\t\t\t\t});\n\n\t\t\t\tif (slideControlIndex !== -1) {\n\t\t\t\t\tvar ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex\n\t\t\t\t\tif ($('#' + ariaButtonControl).length) {\n\t\t\t\t\t\t$(this).attr({\n\t\t\t\t\t\t\t'aria-describedby': ariaButtonControl\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_.$dots.attr('role', 'tablist').find('li').each(function(i) {\n\t\t\t\tvar mappedSlideIndex = tabControlIndexes[i];\n\n\t\t\t\t$(this).attr({\n\t\t\t\t\t'role': 'presentation'\n\t\t\t\t});\n\n\t\t\t\t$(this).find('button').first().attr({\n\t\t\t\t\t'role': 'tab',\n\t\t\t\t\t'id': 'slick-slide-control' + _.instanceUid + i,\n\t\t\t\t\t'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,\n\t\t\t\t\t'aria-label': (i + 1) + ' of ' + numDotGroups,\n\t\t\t\t\t'aria-selected': null,\n\t\t\t\t\t'tabindex': '-1'\n\t\t\t\t});\n\n\t\t\t}).eq(_.currentSlide).find('button').attr({\n\t\t\t\t'aria-selected': 'true',\n\t\t\t\t'tabindex': '0'\n\t\t\t}).end();\n\t\t}\n\n\t\tfor (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {\n\t\t\tif (_.options.focusOnChange) {\n\t\t\t\t_.$slides.eq(i).attr({'tabindex': '0'});\n\t\t\t} else {\n\t\t\t\t_.$slides.eq(i).removeAttr('tabindex');\n\t\t\t}\n\t\t}\n\n\t\t_.activateADA();\n\n\t};\n\n\tSlick.prototype.initArrowEvents = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t\t\t_.$prevArrow\n\t\t\t\t.off('click.slick')\n\t\t\t\t.on('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, _.changeSlide);\n\t\t\t_.$nextArrow\n\t\t\t\t.off('click.slick')\n\t\t\t\t.on('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, _.changeSlide);\n\n\t\t\tif (_.options.accessibility === true) {\n\t\t\t\t_.$prevArrow.on('keydown.slick', _.keyHandler);\n\t\t\t\t_.$nextArrow.on('keydown.slick', _.keyHandler);\n\t\t\t}\n\t\t}\n\n\t};\n\n\tSlick.prototype.initDotEvents = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\t\t$('li', _.$dots).on('click.slick', {\n\t\t\t\tmessage: 'index'\n\t\t\t}, _.changeSlide);\n\n\t\t\tif (_.options.accessibility === true) {\n\t\t\t\t_.$dots.on('keydown.slick', _.keyHandler);\n\t\t\t}\n\t\t}\n\n\t\tif (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {\n\n\t\t\t$('li', _.$dots)\n\t\t\t\t.on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n\t\t\t\t.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.initSlideEvents = function() {\n\n\t\tvar _ = this;\n\n\t\tif ( _.options.pauseOnHover ) {\n\n\t\t\t_.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n\t\t\t_.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.initializeEvents = function() {\n\n\t\tvar _ = this;\n\n\t\t_.initArrowEvents();\n\n\t\t_.initDotEvents();\n\t\t_.initSlideEvents();\n\n\t\t_.$list.on('touchstart.slick mousedown.slick', {\n\t\t\taction: 'start'\n\t\t}, _.swipeHandler);\n\t\t_.$list.on('touchmove.slick mousemove.slick', {\n\t\t\taction: 'move'\n\t\t}, _.swipeHandler);\n\t\t_.$list.on('touchend.slick mouseup.slick', {\n\t\t\taction: 'end'\n\t\t}, _.swipeHandler);\n\t\t_.$list.on('touchcancel.slick mouseleave.slick', {\n\t\t\taction: 'end'\n\t\t}, _.swipeHandler);\n\n\t\t_.$list.on('click.slick', _.clickHandler);\n\n\t\t$(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n\t\tif (_.options.accessibility === true) {\n\t\t\t_.$list.on('keydown.slick', _.keyHandler);\n\t\t}\n\n\t\tif (_.options.focusOnSelect === true) {\n\t\t\t$(_.$slideTrack).children().on('click.slick', _.selectHandler);\n\t\t}\n\n\t\t$(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n\t\t$(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n\t\t$('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n\t\t$(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n\t\t$(_.setPosition);\n\n\t};\n\n\tSlick.prototype.initUI = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n\t\t\t_.$prevArrow.show();\n\t\t\t_.$nextArrow.show();\n\n\t\t}\n\n\t\tif (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n\t\t\t_.$dots.show();\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.keyHandler = function(event) {\n\n\t\tvar _ = this;\n\t\t//Dont slide if the cursor is inside the form fields and arrow keys are pressed\n\t\tif(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n\t\t\tif (event.keyCode === 37 && _.options.accessibility === true) {\n\t\t\t\t_.changeSlide({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmessage: _.options.rtl === true ? 'next' :  'previous'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (event.keyCode === 39 && _.options.accessibility === true) {\n\t\t\t\t_.changeSlide({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmessage: _.options.rtl === true ? 'previous' : 'next'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t};\n\n\tSlick.prototype.lazyLoad = function() {\n\n\t\tvar _ = this,\n\t\t\tloadRange, cloneRange, rangeStart, rangeEnd;\n\n\t\tfunction loadImages(imagesScope) {\n\n\t\t\t$('img[data-lazy]', imagesScope).each(function() {\n\n\t\t\t\tvar image = $(this),\n\t\t\t\t\timageSource = $(this).attr('data-lazy'),\n\t\t\t\t\timageSrcSet = $(this).attr('data-srcset'),\n\t\t\t\t\timageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),\n\t\t\t\t\timageToLoad = document.createElement('img');\n\n\t\t\t\timageToLoad.onload = function() {\n\n\t\t\t\t\timage\n\t\t\t\t\t\t.animate({ opacity: 0 }, 100, function() {\n\n\t\t\t\t\t\t\tif (imageSrcSet) {\n\t\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t\t\t.attr('srcset', imageSrcSet );\n\n\t\t\t\t\t\t\t\tif (imageSizes) {\n\t\t\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t\t\t\t.attr('sizes', imageSizes );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t\t.attr('src', imageSource)\n\t\t\t\t\t\t\t\t.animate({ opacity: 1 }, 200, function() {\n\t\t\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t\t\t\t.removeAttr('data-lazy data-srcset data-sizes')\n\t\t\t\t\t\t\t\t\t\t.removeClass('slick-loading');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n\t\t\t\t\t\t});\n\n\t\t\t\t};\n\n\t\t\t\timageToLoad.onerror = function() {\n\n\t\t\t\t\timage\n\t\t\t\t\t\t.removeAttr( 'data-lazy' )\n\t\t\t\t\t\t.removeClass( 'slick-loading' )\n\t\t\t\t\t\t.addClass( 'slick-lazyload-error' );\n\n\t\t\t\t\t_.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n\t\t\t\t};\n\n\t\t\t\timageToLoad.src = imageSource;\n\n\t\t\t});\n\n\t\t}\n\n\t\tif (_.options.centerMode === true) {\n\t\t\tif (_.options.infinite === true) {\n\t\t\t\trangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n\t\t\t\trangeEnd = rangeStart + _.options.slidesToShow + 2;\n\t\t\t} else {\n\t\t\t\trangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n\t\t\t\trangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n\t\t\t}\n\t\t} else {\n\t\t\trangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n\t\t\trangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n\t\t\tif (_.options.fade === true) {\n\t\t\t\tif (rangeStart > 0) rangeStart--;\n\t\t\t\tif (rangeEnd <= _.slideCount) rangeEnd++;\n\t\t\t}\n\t\t}\n\n\t\tloadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\n\t\tif (_.options.lazyLoad === 'anticipated') {\n\t\t\tvar prevSlide = rangeStart - 1,\n\t\t\t\tnextSlide = rangeEnd,\n\t\t\t\t$slides = _.$slider.find('.slick-slide');\n\n\t\t\tfor (var i = 0; i < _.options.slidesToScroll; i++) {\n\t\t\t\tif (prevSlide < 0) prevSlide = _.slideCount - 1;\n\t\t\t\tloadRange = loadRange.add($slides.eq(prevSlide));\n\t\t\t\tloadRange = loadRange.add($slides.eq(nextSlide));\n\t\t\t\tprevSlide--;\n\t\t\t\tnextSlide++;\n\t\t\t}\n\t\t}\n\n\t\tloadImages(loadRange);\n\n\t\tif (_.slideCount <= _.options.slidesToShow) {\n\t\t\tcloneRange = _.$slider.find('.slick-slide');\n\t\t\tloadImages(cloneRange);\n\t\t} else\n\t\tif (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n\t\t\tcloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n\t\t\tloadImages(cloneRange);\n\t\t} else if (_.currentSlide === 0) {\n\t\t\tcloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n\t\t\tloadImages(cloneRange);\n\t\t}\n\n\t};\n\n\tSlick.prototype.loadSlider = function() {\n\n\t\tvar _ = this;\n\n\t\t_.setPosition();\n\n\t\t_.$slideTrack.css({\n\t\t\topacity: 1\n\t\t});\n\n\t\t_.$slider.removeClass('slick-loading');\n\n\t\t_.initUI();\n\n\t\tif (_.options.lazyLoad === 'progressive') {\n\t\t\t_.progressiveLazyLoad();\n\t\t}\n\n\t};\n\n\tSlick.prototype.next = Slick.prototype.slickNext = function() {\n\n\t\tvar _ = this;\n\n\t\t_.changeSlide({\n\t\t\tdata: {\n\t\t\t\tmessage: 'next'\n\t\t\t}\n\t\t});\n\n\t};\n\n\tSlick.prototype.orientationChange = function() {\n\n\t\tvar _ = this;\n\n\t\t_.checkResponsive();\n\t\t_.setPosition();\n\n\t};\n\n\tSlick.prototype.pause = Slick.prototype.slickPause = function() {\n\n\t\tvar _ = this;\n\n\t\t_.autoPlayClear();\n\t\t_.paused = true;\n\n\t};\n\n\tSlick.prototype.play = Slick.prototype.slickPlay = function() {\n\n\t\tvar _ = this;\n\n\t\t_.autoPlay();\n\t\t_.options.autoplay = true;\n\t\t_.paused = false;\n\t\t_.focussed = false;\n\t\t_.interrupted = false;\n\n\t};\n\n\tSlick.prototype.postSlide = function(index) {\n\n\t\tvar _ = this;\n\n\t\tif( !_.unslicked ) {\n\n\t\t\t_.$slider.trigger('afterChange', [_, index]);\n\n\t\t\t_.animating = false;\n\n\t\t\tif (_.slideCount > _.options.slidesToShow) {\n\t\t\t\t_.setPosition();\n\t\t\t}\n\n\t\t\t_.swipeLeft = null;\n\n\t\t\tif ( _.options.autoplay ) {\n\t\t\t\t_.autoPlay();\n\t\t\t}\n\n\t\t\tif (_.options.accessibility === true) {\n\t\t\t\t_.initADA();\n\n\t\t\t\tif (_.options.focusOnChange) {\n\t\t\t\t\tvar $currentSlide = $(_.$slides.get(_.currentSlide));\n\t\t\t\t\t$currentSlide.attr('tabindex', 0).focus();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n\t\tvar _ = this;\n\n\t\t_.changeSlide({\n\t\t\tdata: {\n\t\t\t\tmessage: 'previous'\n\t\t\t}\n\t\t});\n\n\t};\n\n\tSlick.prototype.preventDefault = function(event) {\n\n\t\tevent.preventDefault();\n\n\t};\n\n\tSlick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n\t\ttryCount = tryCount || 1;\n\n\t\tvar _ = this,\n\t\t\t$imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n\t\t\timage,\n\t\t\timageSource,\n\t\t\timageSrcSet,\n\t\t\timageSizes,\n\t\t\timageToLoad;\n\n\t\tif ( $imgsToLoad.length ) {\n\n\t\t\timage = $imgsToLoad.first();\n\t\t\timageSource = image.attr('data-lazy');\n\t\t\timageSrcSet = image.attr('data-srcset');\n\t\t\timageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');\n\t\t\timageToLoad = document.createElement('img');\n\n\t\t\timageToLoad.onload = function() {\n\n\t\t\t\tif (imageSrcSet) {\n\t\t\t\t\timage\n\t\t\t\t\t\t.attr('srcset', imageSrcSet );\n\n\t\t\t\t\tif (imageSizes) {\n\t\t\t\t\t\timage\n\t\t\t\t\t\t\t.attr('sizes', imageSizes );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\timage\n\t\t\t\t\t.attr( 'src', imageSource )\n\t\t\t\t\t.removeAttr('data-lazy data-srcset data-sizes')\n\t\t\t\t\t.removeClass('slick-loading');\n\n\t\t\t\tif ( _.options.adaptiveHeight === true ) {\n\t\t\t\t\t_.setPosition();\n\t\t\t\t}\n\n\t\t\t\t_.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n\t\t\t\t_.progressiveLazyLoad();\n\n\t\t\t};\n\n\t\t\timageToLoad.onerror = function() {\n\n\t\t\t\tif ( tryCount < 3 ) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * try to load the image 3 times,\n\t\t\t\t\t * leave a slight delay so we don't get\n\t\t\t\t\t * servers blocking the request.\n\t\t\t\t\t */\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\t_.progressiveLazyLoad( tryCount + 1 );\n\t\t\t\t\t}, 500 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\timage\n\t\t\t\t\t\t.removeAttr( 'data-lazy' )\n\t\t\t\t\t\t.removeClass( 'slick-loading' )\n\t\t\t\t\t\t.addClass( 'slick-lazyload-error' );\n\n\t\t\t\t\t_.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n\t\t\t\t\t_.progressiveLazyLoad();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\timageToLoad.src = imageSource;\n\n\t\t} else {\n\n\t\t\t_.$slider.trigger('allImagesLoaded', [ _ ]);\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.refresh = function( initializing ) {\n\n\t\tvar _ = this, currentSlide, lastVisibleIndex;\n\n\t\tlastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n\t\t// in non-infinite sliders, we don't want to go past the\n\t\t// last visible index.\n\t\tif( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n\t\t\t_.currentSlide = lastVisibleIndex;\n\t\t}\n\n\t\t// if less slides than to show, go to start.\n\t\tif ( _.slideCount <= _.options.slidesToShow ) {\n\t\t\t_.currentSlide = 0;\n\n\t\t}\n\n\t\tcurrentSlide = _.currentSlide;\n\n\t\t_.destroy(true);\n\n\t\t$.extend(_, _.initials, { currentSlide: currentSlide });\n\n\t\t_.init();\n\n\t\tif( !initializing ) {\n\n\t\t\t_.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'index',\n\t\t\t\t\tindex: currentSlide\n\t\t\t\t}\n\t\t\t}, false);\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.registerBreakpoints = function() {\n\n\t\tvar _ = this, breakpoint, currentBreakpoint, l,\n\t\t\tresponsiveSettings = _.options.responsive || null;\n\n\t\tif ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n\t\t\t_.respondTo = _.options.respondTo || 'window';\n\n\t\t\tfor ( breakpoint in responsiveSettings ) {\n\n\t\t\t\tl = _.breakpoints.length-1;\n\n\t\t\t\tif (responsiveSettings.hasOwnProperty(breakpoint)) {\n\t\t\t\t\tcurrentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n\t\t\t\t\t// loop through the breakpoints and cut out any existing\n\t\t\t\t\t// ones with the same breakpoint number, we don't want dupes.\n\t\t\t\t\twhile( l >= 0 ) {\n\t\t\t\t\t\tif( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n\t\t\t\t\t\t\t_.breakpoints.splice(l,1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tl--;\n\t\t\t\t\t}\n\n\t\t\t\t\t_.breakpoints.push(currentBreakpoint);\n\t\t\t\t\t_.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_.breakpoints.sort(function(a, b) {\n\t\t\t\treturn ( _.options.mobileFirst ) ? a-b : b-a;\n\t\t\t});\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.reinit = function() {\n\n\t\tvar _ = this;\n\n\t\t_.$slides =\n\t\t\t_.$slideTrack\n\t\t\t\t.children(_.options.slide)\n\t\t\t\t.addClass('slick-slide');\n\n\t\t_.slideCount = _.$slides.length;\n\n\t\tif (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n\t\t\t_.currentSlide = _.currentSlide - _.options.slidesToScroll;\n\t\t}\n\n\t\tif (_.slideCount <= _.options.slidesToShow) {\n\t\t\t_.currentSlide = 0;\n\t\t}\n\n\t\t_.registerBreakpoints();\n\n\t\t_.setProps();\n\t\t_.setupInfinite();\n\t\t_.buildArrows();\n\t\t_.updateArrows();\n\t\t_.initArrowEvents();\n\t\t_.buildDots();\n\t\t_.updateDots();\n\t\t_.initDotEvents();\n\t\t_.cleanUpSlideEvents();\n\t\t_.initSlideEvents();\n\n\t\t_.checkResponsive(false, true);\n\n\t\tif (_.options.focusOnSelect === true) {\n\t\t\t$(_.$slideTrack).children().on('click.slick', _.selectHandler);\n\t\t}\n\n\t\t_.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n\t\t_.setPosition();\n\t\t_.focusHandler();\n\n\t\t_.paused = !_.options.autoplay;\n\t\t_.autoPlay();\n\n\t\t_.$slider.trigger('reInit', [_]);\n\n\t};\n\n\tSlick.prototype.resize = function() {\n\n\t\tvar _ = this;\n\n\t\tif ($(window).width() !== _.windowWidth) {\n\t\t\tclearTimeout(_.windowDelay);\n\t\t\t_.windowDelay = window.setTimeout(function() {\n\t\t\t\t_.windowWidth = $(window).width();\n\t\t\t\t_.checkResponsive();\n\t\t\t\tif( !_.unslicked ) { _.setPosition(); }\n\t\t\t}, 50);\n\t\t}\n\t};\n\n\tSlick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n\t\tvar _ = this;\n\n\t\tif (typeof(index) === 'boolean') {\n\t\t\tremoveBefore = index;\n\t\t\tindex = removeBefore === true ? 0 : _.slideCount - 1;\n\t\t} else {\n\t\t\tindex = removeBefore === true ? --index : index;\n\t\t}\n\n\t\tif (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\t_.unload();\n\n\t\tif (removeAll === true) {\n\t\t\t_.$slideTrack.children().remove();\n\t\t} else {\n\t\t\t_.$slideTrack.children(this.options.slide).eq(index).remove();\n\t\t}\n\n\t\t_.$slides = _.$slideTrack.children(this.options.slide);\n\n\t\t_.$slideTrack.children(this.options.slide).detach();\n\n\t\t_.$slideTrack.append(_.$slides);\n\n\t\t_.$slidesCache = _.$slides;\n\n\t\t_.reinit();\n\n\t};\n\n\tSlick.prototype.setCSS = function(position) {\n\n\t\tvar _ = this,\n\t\t\tpositionProps = {},\n\t\t\tx, y;\n\n\t\tif (_.options.rtl === true) {\n\t\t\tposition = -position;\n\t\t}\n\t\tx = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n\t\ty = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n\t\tpositionProps[_.positionProp] = position;\n\n\t\tif (_.transformsEnabled === false) {\n\t\t\t_.$slideTrack.css(positionProps);\n\t\t} else {\n\t\t\tpositionProps = {};\n\t\t\tif (_.cssTransitions === false) {\n\t\t\t\tpositionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n\t\t\t\t_.$slideTrack.css(positionProps);\n\t\t\t} else {\n\t\t\t\tpositionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n\t\t\t\t_.$slideTrack.css(positionProps);\n\t\t\t}\n\t\t}\n\n\t};\n\n\tSlick.prototype.setDimensions = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.vertical === false) {\n\t\t\tif (_.options.centerMode === true) {\n\t\t\t\t_.$list.css({\n\t\t\t\t\tpadding: ('0px ' + _.options.centerPadding)\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t_.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n\t\t\tif (_.options.centerMode === true) {\n\t\t\t\t_.$list.css({\n\t\t\t\t\tpadding: (_.options.centerPadding + ' 0px')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t_.listWidth = _.$list.width();\n\t\t_.listHeight = _.$list.height();\n\n\n\t\tif (_.options.vertical === false && _.options.variableWidth === false) {\n\t\t\t_.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n\t\t\t_.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n\t\t} else if (_.options.variableWidth === true) {\n\t\t\t_.$slideTrack.width(5000 * _.slideCount);\n\t\t} else {\n\t\t\t_.slideWidth = Math.ceil(_.listWidth);\n\t\t\t_.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n\t\t}\n\n\t\tvar offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n\t\tif (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n\t};\n\n\tSlick.prototype.setFade = function() {\n\n\t\tvar _ = this,\n\t\t\ttargetLeft;\n\n\t\t_.$slides.each(function(index, element) {\n\t\t\ttargetLeft = (_.slideWidth * index) * -1;\n\t\t\tif (_.options.rtl === true) {\n\t\t\t\t$(element).css({\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tright: targetLeft,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tzIndex: _.options.zIndex - 2,\n\t\t\t\t\topacity: 0\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$(element).css({\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tleft: targetLeft,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tzIndex: _.options.zIndex - 2,\n\t\t\t\t\topacity: 0\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t_.$slides.eq(_.currentSlide).css({\n\t\t\tzIndex: _.options.zIndex - 1,\n\t\t\topacity: 1\n\t\t});\n\n\t};\n\n\tSlick.prototype.setHeight = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n\t\t\tvar targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n\t\t\t_.$list.css('height', targetHeight);\n\t\t}\n\n\t};\n\n\tSlick.prototype.setOption =\n\t\tSlick.prototype.slickSetOption = function() {\n\n\t\t\t/**\n\t\t\t * accepts arguments in format of:\n\t\t\t *\n\t\t\t *  - for changing a single option's value:\n\t\t\t *     .slick(\"setOption\", option, value, refresh )\n\t\t\t *\n\t\t\t *  - for changing a set of responsive options:\n\t\t\t *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n\t\t\t *\n\t\t\t *  - for updating multiple values at once (not responsive)\n\t\t\t *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n\t\t\t */\n\n\t\t\tvar _ = this, l, item, option, value, refresh = false, type;\n\n\t\t\tif( $.type( arguments[0] ) === 'object' ) {\n\n\t\t\t\toption =  arguments[0];\n\t\t\t\trefresh = arguments[1];\n\t\t\t\ttype = 'multiple';\n\n\t\t\t} else if ( $.type( arguments[0] ) === 'string' ) {\n\n\t\t\t\toption =  arguments[0];\n\t\t\t\tvalue = arguments[1];\n\t\t\t\trefresh = arguments[2];\n\n\t\t\t\tif ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n\t\t\t\t\ttype = 'responsive';\n\n\t\t\t\t} else if ( typeof arguments[1] !== 'undefined' ) {\n\n\t\t\t\t\ttype = 'single';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( type === 'single' ) {\n\n\t\t\t\t_.options[option] = value;\n\n\n\t\t\t} else if ( type === 'multiple' ) {\n\n\t\t\t\t$.each( option , function( opt, val ) {\n\n\t\t\t\t\t_.options[opt] = val;\n\n\t\t\t\t});\n\n\n\t\t\t} else if ( type === 'responsive' ) {\n\n\t\t\t\tfor ( item in value ) {\n\n\t\t\t\t\tif( $.type( _.options.responsive ) !== 'array' ) {\n\n\t\t\t\t\t\t_.options.responsive = [ value[item] ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tl = _.options.responsive.length-1;\n\n\t\t\t\t\t\t// loop through the responsive object and splice out duplicates.\n\t\t\t\t\t\twhile( l >= 0 ) {\n\n\t\t\t\t\t\t\tif( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n\t\t\t\t\t\t\t\t_.options.responsive.splice(l,1);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tl--;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_.options.responsive.push( value[item] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refresh ) {\n\n\t\t\t\t_.unload();\n\t\t\t\t_.reinit();\n\n\t\t\t}\n\n\t\t};\n\n\tSlick.prototype.setPosition = function() {\n\n\t\tvar _ = this;\n\n\t\t_.setDimensions();\n\n\t\t_.setHeight();\n\n\t\tif (_.options.fade === false) {\n\t\t\t_.setCSS(_.getLeft(_.currentSlide));\n\t\t} else {\n\t\t\t_.setFade();\n\t\t}\n\n\t\t_.$slider.trigger('setPosition', [_]);\n\n\t};\n\n\tSlick.prototype.setProps = function() {\n\n\t\tvar _ = this,\n\t\t\tbodyStyle = document.body.style;\n\n\t\t_.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n\t\tif (_.positionProp === 'top') {\n\t\t\t_.$slider.addClass('slick-vertical');\n\t\t} else {\n\t\t\t_.$slider.removeClass('slick-vertical');\n\t\t}\n\n\t\tif (bodyStyle.WebkitTransition !== undefined ||\n\t\t\tbodyStyle.MozTransition !== undefined ||\n\t\t\tbodyStyle.msTransition !== undefined) {\n\t\t\tif (_.options.useCSS === true) {\n\t\t\t\t_.cssTransitions = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( _.options.fade ) {\n\t\t\tif ( typeof _.options.zIndex === 'number' ) {\n\t\t\t\tif( _.options.zIndex < 3 ) {\n\t\t\t\t\t_.options.zIndex = 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_.options.zIndex = _.defaults.zIndex;\n\t\t\t}\n\t\t}\n\n\t\tif (bodyStyle.OTransform !== undefined) {\n\t\t\t_.animType = 'OTransform';\n\t\t\t_.transformType = '-o-transform';\n\t\t\t_.transitionType = 'OTransition';\n\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n\t\t}\n\t\tif (bodyStyle.MozTransform !== undefined) {\n\t\t\t_.animType = 'MozTransform';\n\t\t\t_.transformType = '-moz-transform';\n\t\t\t_.transitionType = 'MozTransition';\n\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n\t\t}\n\t\tif (bodyStyle.webkitTransform !== undefined) {\n\t\t\t_.animType = 'webkitTransform';\n\t\t\t_.transformType = '-webkit-transform';\n\t\t\t_.transitionType = 'webkitTransition';\n\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n\t\t}\n\t\tif (bodyStyle.msTransform !== undefined) {\n\t\t\t_.animType = 'msTransform';\n\t\t\t_.transformType = '-ms-transform';\n\t\t\t_.transitionType = 'msTransition';\n\t\t\tif (bodyStyle.msTransform === undefined) _.animType = false;\n\t\t}\n\t\tif (bodyStyle.transform !== undefined && _.animType !== false) {\n\t\t\t_.animType = 'transform';\n\t\t\t_.transformType = 'transform';\n\t\t\t_.transitionType = 'transition';\n\t\t}\n\t\t_.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n\t};\n\n\n\tSlick.prototype.setSlideClasses = function(index) {\n\n\t\tvar _ = this,\n\t\t\tcenterOffset, allSlides, indexOffset, remainder;\n\n\t\tallSlides = _.$slider\n\t\t\t.find('.slick-slide')\n\t\t\t.removeClass('slick-active slick-center slick-current')\n\t\t\t.attr('aria-hidden', 'true');\n\n\t\t_.$slides\n\t\t\t.eq(index)\n\t\t\t.addClass('slick-current');\n\n\t\tif (_.options.centerMode === true) {\n\n\t\t\tvar evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;\n\n\t\t\tcenterOffset = Math.floor(_.options.slidesToShow / 2);\n\n\t\t\tif (_.options.infinite === true) {\n\n\t\t\t\tif (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n\t\t\t\t\t_.$slides\n\t\t\t\t\t\t.slice(index - centerOffset + evenCoef, index + centerOffset + 1)\n\t\t\t\t\t\t.addClass('slick-active')\n\t\t\t\t\t\t.attr('aria-hidden', 'false');\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexOffset = _.options.slidesToShow + index;\n\t\t\t\t\tallSlides\n\t\t\t\t\t\t.slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)\n\t\t\t\t\t\t.addClass('slick-active')\n\t\t\t\t\t\t.attr('aria-hidden', 'false');\n\n\t\t\t\t}\n\n\t\t\t\tif (index === 0) {\n\n\t\t\t\t\tallSlides\n\t\t\t\t\t\t.eq( _.options.slidesToShow + _.slideCount + 1 )\n\t\t\t\t\t\t.addClass('slick-center');\n\n\t\t\t\t} else if (index === _.slideCount - 1) {\n\n\t\t\t\t\tallSlides\n\t\t\t\t\t\t.eq(_.options.slidesToShow)\n\t\t\t\t\t\t.addClass('slick-center');\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_.$slides\n\t\t\t\t.eq(index)\n\t\t\t\t.addClass('slick-center');\n\n\t\t} else {\n\n\t\t\tif (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n\t\t\t\t_.$slides\n\t\t\t\t\t.slice(index, index + _.options.slidesToShow)\n\t\t\t\t\t.addClass('slick-active')\n\t\t\t\t\t.attr('aria-hidden', 'false');\n\n\t\t\t} else if (allSlides.length <= _.options.slidesToShow) {\n\n\t\t\t\tallSlides\n\t\t\t\t\t.addClass('slick-active')\n\t\t\t\t\t.attr('aria-hidden', 'false');\n\n\t\t\t} else {\n\n\t\t\t\tremainder = _.slideCount % _.options.slidesToShow;\n\t\t\t\tindexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n\t\t\t\tif (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n\t\t\t\t\tallSlides\n\t\t\t\t\t\t.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n\t\t\t\t\t\t.addClass('slick-active')\n\t\t\t\t\t\t.attr('aria-hidden', 'false');\n\n\t\t\t\t} else {\n\n\t\t\t\t\tallSlides\n\t\t\t\t\t\t.slice(indexOffset, indexOffset + _.options.slidesToShow)\n\t\t\t\t\t\t.addClass('slick-active')\n\t\t\t\t\t\t.attr('aria-hidden', 'false');\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {\n\t\t\t_.lazyLoad();\n\t\t}\n\t};\n\n\tSlick.prototype.setupInfinite = function() {\n\n\t\tvar _ = this,\n\t\t\ti, slideIndex, infiniteCount;\n\n\t\tif (_.options.fade === true) {\n\t\t\t_.options.centerMode = false;\n\t\t}\n\n\t\tif (_.options.infinite === true && _.options.fade === false) {\n\n\t\t\tslideIndex = null;\n\n\t\t\tif (_.slideCount > _.options.slidesToShow) {\n\n\t\t\t\tif (_.options.centerMode === true) {\n\t\t\t\t\tinfiniteCount = _.options.slidesToShow + 1;\n\t\t\t\t} else {\n\t\t\t\t\tinfiniteCount = _.options.slidesToShow;\n\t\t\t\t}\n\n\t\t\t\tfor (i = _.slideCount; i > (_.slideCount -\n\t\t\t\t\tinfiniteCount); i -= 1) {\n\t\t\t\t\tslideIndex = i - 1;\n\t\t\t\t\t$(_.$slides[slideIndex]).clone(true).attr('id', '')\n\t\t\t\t\t\t.attr('data-slick-index', slideIndex - _.slideCount)\n\t\t\t\t\t\t.prependTo(_.$slideTrack).addClass('slick-cloned');\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < infiniteCount  + _.slideCount; i += 1) {\n\t\t\t\t\tslideIndex = i;\n\t\t\t\t\t$(_.$slides[slideIndex]).clone(true).attr('id', '')\n\t\t\t\t\t\t.attr('data-slick-index', slideIndex + _.slideCount)\n\t\t\t\t\t\t.appendTo(_.$slideTrack).addClass('slick-cloned');\n\t\t\t\t}\n\t\t\t\t_.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n\t\t\t\t\t$(this).attr('id', '');\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.interrupt = function( toggle ) {\n\n\t\tvar _ = this;\n\n\t\tif( !toggle ) {\n\t\t\t_.autoPlay();\n\t\t}\n\t\t_.interrupted = toggle;\n\n\t};\n\n\tSlick.prototype.selectHandler = function(event) {\n\n\t\tvar _ = this;\n\n\t\tvar targetElement =\n\t\t\t$(event.target).is('.slick-slide') ?\n\t\t\t\t$(event.target) :\n\t\t\t\t$(event.target).parents('.slick-slide');\n\n\t\tvar index = parseInt(targetElement.attr('data-slick-index'));\n\n\t\tif (!index) index = 0;\n\n\t\tif (_.slideCount <= _.options.slidesToShow) {\n\n\t\t\t_.slideHandler(index, false, true);\n\t\t\treturn;\n\n\t\t}\n\n\t\t_.slideHandler(index);\n\n\t};\n\n\tSlick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n\t\tvar targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n\t\t\t_ = this, navTarget;\n\n\t\tsync = sync || false;\n\n\t\tif (_.animating === true && _.options.waitForAnimate === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (_.options.fade === true && _.currentSlide === index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sync === false) {\n\t\t\t_.asNavFor(index);\n\t\t}\n\n\t\ttargetSlide = index;\n\t\ttargetLeft = _.getLeft(targetSlide);\n\t\tslideLeft = _.getLeft(_.currentSlide);\n\n\t\t_.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n\t\tif (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n\t\t\tif (_.options.fade === false) {\n\t\t\t\ttargetSlide = _.currentSlide;\n\t\t\t\tif (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n\t\t\t\t\t_.animateSlide(slideLeft, function() {\n\t\t\t\t\t\t_.postSlide(targetSlide);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t_.postSlide(targetSlide);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n\t\t\tif (_.options.fade === false) {\n\t\t\t\ttargetSlide = _.currentSlide;\n\t\t\t\tif (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n\t\t\t\t\t_.animateSlide(slideLeft, function() {\n\t\t\t\t\t\t_.postSlide(targetSlide);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t_.postSlide(targetSlide);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( _.options.autoplay ) {\n\t\t\tclearInterval(_.autoPlayTimer);\n\t\t}\n\n\t\tif (targetSlide < 0) {\n\t\t\tif (_.slideCount % _.options.slidesToScroll !== 0) {\n\t\t\t\tanimSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n\t\t\t} else {\n\t\t\t\tanimSlide = _.slideCount + targetSlide;\n\t\t\t}\n\t\t} else if (targetSlide >= _.slideCount) {\n\t\t\tif (_.slideCount % _.options.slidesToScroll !== 0) {\n\t\t\t\tanimSlide = 0;\n\t\t\t} else {\n\t\t\t\tanimSlide = targetSlide - _.slideCount;\n\t\t\t}\n\t\t} else {\n\t\t\tanimSlide = targetSlide;\n\t\t}\n\n\t\t_.animating = true;\n\n\t\t_.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n\t\toldSlide = _.currentSlide;\n\t\t_.currentSlide = animSlide;\n\n\t\t_.setSlideClasses(_.currentSlide);\n\n\t\tif ( _.options.asNavFor ) {\n\n\t\t\tnavTarget = _.getNavTarget();\n\t\t\tnavTarget = navTarget.slick('getSlick');\n\n\t\t\tif ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n\t\t\t\tnavTarget.setSlideClasses(_.currentSlide);\n\t\t\t}\n\n\t\t}\n\n\t\t_.updateDots();\n\t\t_.updateArrows();\n\n\t\tif (_.options.fade === true) {\n\t\t\tif (dontAnimate !== true) {\n\n\t\t\t\t_.fadeSlideOut(oldSlide);\n\n\t\t\t\t_.fadeSlide(animSlide, function() {\n\t\t\t\t\t_.postSlide(animSlide);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\t_.postSlide(animSlide);\n\t\t\t}\n\t\t\t_.animateHeight();\n\t\t\treturn;\n\t\t}\n\n\t\tif (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n\t\t\t_.animateSlide(targetLeft, function() {\n\t\t\t\t_.postSlide(animSlide);\n\t\t\t});\n\t\t} else {\n\t\t\t_.postSlide(animSlide);\n\t\t}\n\n\t};\n\n\tSlick.prototype.startLoad = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n\t\t\t_.$prevArrow.hide();\n\t\t\t_.$nextArrow.hide();\n\n\t\t}\n\n\t\tif (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n\t\t\t_.$dots.hide();\n\n\t\t}\n\n\t\t_.$slider.addClass('slick-loading');\n\n\t};\n\n\tSlick.prototype.swipeDirection = function() {\n\n\t\tvar xDist, yDist, r, swipeAngle, _ = this;\n\n\t\txDist = _.touchObject.startX - _.touchObject.curX;\n\t\tyDist = _.touchObject.startY - _.touchObject.curY;\n\t\tr = Math.atan2(yDist, xDist);\n\n\t\tswipeAngle = Math.round(r * 180 / Math.PI);\n\t\tif (swipeAngle < 0) {\n\t\t\tswipeAngle = 360 - Math.abs(swipeAngle);\n\t\t}\n\n\t\tif ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n\t\t\treturn (_.options.rtl === false ? 'left' : 'right');\n\t\t}\n\t\tif ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n\t\t\treturn (_.options.rtl === false ? 'left' : 'right');\n\t\t}\n\t\tif ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n\t\t\treturn (_.options.rtl === false ? 'right' : 'left');\n\t\t}\n\t\tif (_.options.verticalSwiping === true) {\n\t\t\tif ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n\t\t\t\treturn 'down';\n\t\t\t} else {\n\t\t\t\treturn 'up';\n\t\t\t}\n\t\t}\n\n\t\treturn 'vertical';\n\n\t};\n\n\tSlick.prototype.swipeEnd = function(event) {\n\n\t\tvar _ = this,\n\t\t\tslideCount,\n\t\t\tdirection;\n\n\t\t_.dragging = false;\n\t\t_.swiping = false;\n\n\t\tif (_.scrolling) {\n\t\t\t_.scrolling = false;\n\t\t\treturn false;\n\t\t}\n\n\t\t_.interrupted = false;\n\t\t_.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n\t\tif ( _.touchObject.curX === undefined ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( _.touchObject.edgeHit === true ) {\n\t\t\t_.$slider.trigger('edge', [_, _.swipeDirection() ]);\n\t\t}\n\n\t\tif ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n\t\t\tdirection = _.swipeDirection();\n\n\t\t\tswitch ( direction ) {\n\n\t\t\t\tcase 'left':\n\t\t\t\tcase 'down':\n\n\t\t\t\t\tslideCount =\n\t\t\t\t\t\t_.options.swipeToSlide ?\n\t\t\t\t\t\t\t_.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n\t\t\t\t\t\t\t_.currentSlide + _.getSlideCount();\n\n\t\t\t\t\t_.currentDirection = 0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\tcase 'up':\n\n\t\t\t\t\tslideCount =\n\t\t\t\t\t\t_.options.swipeToSlide ?\n\t\t\t\t\t\t\t_.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n\t\t\t\t\t\t\t_.currentSlide - _.getSlideCount();\n\n\t\t\t\t\t_.currentDirection = 1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\n\t\t\t}\n\n\t\t\tif( direction != 'vertical' ) {\n\n\t\t\t\t_.slideHandler( slideCount );\n\t\t\t\t_.touchObject = {};\n\t\t\t\t_.$slider.trigger('swipe', [_, direction ]);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( _.touchObject.startX !== _.touchObject.curX ) {\n\n\t\t\t\t_.slideHandler( _.currentSlide );\n\t\t\t\t_.touchObject = {};\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.swipeHandler = function(event) {\n\n\t\tvar _ = this;\n\n\t\tif ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n\t\t\treturn;\n\t\t} else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t_.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n\t\t\tevent.originalEvent.touches.length : 1;\n\n\t\t_.touchObject.minSwipe = _.listWidth / _.options\n\t\t\t.touchThreshold;\n\n\t\tif (_.options.verticalSwiping === true) {\n\t\t\t_.touchObject.minSwipe = _.listHeight / _.options\n\t\t\t\t.touchThreshold;\n\t\t}\n\n\t\tswitch (event.data.action) {\n\n\t\t\tcase 'start':\n\t\t\t\t_.swipeStart(event);\n\t\t\t\tbreak;\n\n\t\t\tcase 'move':\n\t\t\t\t_.swipeMove(event);\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\t_.swipeEnd(event);\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.swipeMove = function(event) {\n\n\t\tvar _ = this,\n\t\t\tedgeWasHit = false,\n\t\t\tcurLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;\n\n\t\ttouches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n\t\tif (!_.dragging || _.scrolling || touches && touches.length !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcurLeft = _.getLeft(_.currentSlide);\n\n\t\t_.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n\t\t_.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n\t\t_.touchObject.swipeLength = Math.round(Math.sqrt(\n\t\t\tMath.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n\t\tverticalSwipeLength = Math.round(Math.sqrt(\n\t\t\tMath.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\n\t\tif (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {\n\t\t\t_.scrolling = true;\n\t\t\treturn false;\n\t\t}\n\n\t\tif (_.options.verticalSwiping === true) {\n\t\t\t_.touchObject.swipeLength = verticalSwipeLength;\n\t\t}\n\n\t\tswipeDirection = _.swipeDirection();\n\n\t\tif (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n\t\t\t_.swiping = true;\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tpositionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n\t\tif (_.options.verticalSwiping === true) {\n\t\t\tpositionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n\t\t}\n\n\n\t\tswipeLength = _.touchObject.swipeLength;\n\n\t\t_.touchObject.edgeHit = false;\n\n\t\tif (_.options.infinite === false) {\n\t\t\tif ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n\t\t\t\tswipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n\t\t\t\t_.touchObject.edgeHit = true;\n\t\t\t}\n\t\t}\n\n\t\tif (_.options.vertical === false) {\n\t\t\t_.swipeLeft = curLeft + swipeLength * positionOffset;\n\t\t} else {\n\t\t\t_.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n\t\t}\n\t\tif (_.options.verticalSwiping === true) {\n\t\t\t_.swipeLeft = curLeft + swipeLength * positionOffset;\n\t\t}\n\n\t\tif (_.options.fade === true || _.options.touchMove === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (_.animating === true) {\n\t\t\t_.swipeLeft = null;\n\t\t\treturn false;\n\t\t}\n\n\t\t_.setCSS(_.swipeLeft);\n\n\t};\n\n\tSlick.prototype.swipeStart = function(event) {\n\n\t\tvar _ = this,\n\t\t\ttouches;\n\n\t\t_.interrupted = true;\n\n\t\tif (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n\t\t\t_.touchObject = {};\n\t\t\treturn false;\n\t\t}\n\n\t\tif (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n\t\t\ttouches = event.originalEvent.touches[0];\n\t\t}\n\n\t\t_.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n\t\t_.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n\t\t_.dragging = true;\n\n\t};\n\n\tSlick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.$slidesCache !== null) {\n\n\t\t\t_.unload();\n\n\t\t\t_.$slideTrack.children(this.options.slide).detach();\n\n\t\t\t_.$slidesCache.appendTo(_.$slideTrack);\n\n\t\t\t_.reinit();\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.unload = function() {\n\n\t\tvar _ = this;\n\n\t\t$('.slick-cloned', _.$slider).remove();\n\n\t\tif (_.$dots) {\n\t\t\t_.$dots.remove();\n\t\t}\n\n\t\tif (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n\t\t\t_.$prevArrow.remove();\n\t\t}\n\n\t\tif (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n\t\t\t_.$nextArrow.remove();\n\t\t}\n\n\t\t_.$slides\n\t\t\t.removeClass('slick-slide slick-active slick-visible slick-current')\n\t\t\t.attr('aria-hidden', 'true')\n\t\t\t.css('width', '');\n\n\t};\n\n\tSlick.prototype.unslick = function(fromBreakpoint) {\n\n\t\tvar _ = this;\n\t\t_.$slider.trigger('unslick', [_, fromBreakpoint]);\n\t\t_.destroy();\n\n\t};\n\n\tSlick.prototype.updateArrows = function() {\n\n\t\tvar _ = this,\n\t\t\tcenterOffset;\n\n\t\tcenterOffset = Math.floor(_.options.slidesToShow / 2);\n\n\t\tif ( _.options.arrows === true &&\n\t\t\t_.slideCount > _.options.slidesToShow &&\n\t\t\t!_.options.infinite ) {\n\n\t\t\t_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t\t\t_.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n\t\t\tif (_.currentSlide === 0) {\n\n\t\t\t\t_.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t\t\t\t_.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n\t\t\t} else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n\t\t\t\t_.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t\t\t\t_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n\t\t\t} else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n\t\t\t\t_.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t\t\t\t_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.updateDots = function() {\n\n\t\tvar _ = this;\n\n\t\tif (_.$dots !== null) {\n\n\t\t\t_.$dots\n\t\t\t\t.find('li')\n\t\t\t\t.removeClass('slick-active')\n\t\t\t\t.end();\n\n\t\t\t_.$dots\n\t\t\t\t.find('li')\n\t\t\t\t.eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n\t\t\t\t.addClass('slick-active');\n\n\t\t}\n\n\t};\n\n\tSlick.prototype.visibility = function() {\n\n\t\tvar _ = this;\n\n\t\tif ( _.options.autoplay ) {\n\n\t\t\tif ( document[_.hidden] ) {\n\n\t\t\t\t_.interrupted = true;\n\n\t\t\t} else {\n\n\t\t\t\t_.interrupted = false;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t$.fn.slick = function() {\n\t\tvar _ = this,\n\t\t\topt = arguments[0],\n\t\t\targs = Array.prototype.slice.call(arguments, 1),\n\t\t\tl = _.length,\n\t\t\ti,\n\t\t\tret;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tif (typeof opt == 'object' || typeof opt == 'undefined')\n\t\t\t\t_[i].slick = new Slick(_[i], opt);\n\t\t\telse\n\t\t\t\tret = _[i].slick[opt].apply(_[i].slick, args);\n\t\t\tif (typeof ret != 'undefined') return ret;\n\t\t}\n\t\treturn _;\n\t};\n\n}));\n\n\n//# sourceURL=webpack:///./dist/js/vendor/jquery.slick.js?")},jquery:function(module,exports){eval("module.exports = jQuery;\n\n//# sourceURL=webpack:///external_%22jQuery%22?")}});