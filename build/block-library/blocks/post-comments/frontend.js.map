{"version":3,"sources":["webpack://novablocks/webpack/bootstrap","webpack://novablocks/@novablocks/block-library/src/blocks/post-comments/frontend.js","webpack://novablocks/external {\"this\":[\"novablocks\",\"icons\"]}"],"names":["COPY_LINK_SELECTOR","NOTIFICATION_VISIBLE_CLASS","$","window","undefined","$conversationsBlock","$commentList","$commentDropdown","find","children","$commentCheckboxes","$notification","bindEvents","highlightCommentOnClick","document","on","handleCommentDropdownState","copyLinkToClipboard","$this","commentId","data","wrapperSelector","$commentWrapper","addClass","ajax","url","nb_comments","ajaxUrl","type","actions","toggleHighlight","commentsListArgs","success","response","$newComment","parseHTML","replaceWith","error","complete","removeClass","event","length","target","is","prop","preventDefault","copyText","attr","succeeded","addEventListener","e","clipboardData","setData","execCommand","err","setTimeout","jQuery"],"mappings":"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","file":"./build/block-library/blocks/post-comments/frontend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/block-library/build/blocks/post-comments/frontend.js\");\n","import '@novablocks/icons'\n\nconst COPY_LINK_SELECTOR = '.copy-comment-link';\nconst NOTIFICATION_VISIBLE_CLASS = 'notification--is-visible';\n\n(function ($, window, undefined) {\n\n  let $conversationsBlock = $('.novablocks-conversations'),\n    $commentList = $('.comment-list'),\n    $commentDropdown = $commentList.find('.comment-dropdown').children(),\n    $commentCheckboxes = $commentList.find(' .comment-dropdown-open')\n\n  const $notification = $('.novablocks-conversations__notification-text')\n\n  bindEvents()\n\n  highlightCommentOnClick()\n\n  function bindEvents () {\n    // Close comment \"More\" dropdown when clicking anywhere outside of it.\n    $(document).on('click', handleCommentDropdownState)\n    // Handle comment direct link copying to the clipboard.\n    $commentList.on('click', COPY_LINK_SELECTOR, copyLinkToClipboard)\n  }\n\n  function highlightCommentOnClick () {\n\n    $commentList.on('click', '.toggle-comment-highlight', function () {\n      let $this = $(this),\n        commentId = $this.data('comment_id'),\n        wrapperSelector = '#wrapper-comment-' + commentId,\n        $commentWrapper = $(wrapperSelector)\n\n      // Put the whole comment in a working/loading state.\n      $commentWrapper.addClass('working')\n\n      $.ajax({\n        url: nb_comments.ajaxUrl,\n        type: 'POST',\n        data: {\n          'action': nb_comments.actions.toggleHighlight,\n          'comment_id': commentId,\n          'commentsListArgs': typeof nb_comments.commentsListArgs !== 'undefined' ? nb_comments.commentsListArgs : [],\n          'nonce': $this.data('nonce')\n        },\n        success: function (response) {\n          // Replace the current comment markup with the received one.\n          // But only replace the comment wrapper while leaving child comments intact.\n          let $newComment = $($.parseHTML(response))\n          $commentWrapper.replaceWith($newComment.find(wrapperSelector))\n\n          // Reinitialize stuff\n          $commentDropdown = $commentList.find('.comment-dropdown').children()\n          $commentCheckboxes = $commentList.find(' .comment-dropdown-open')\n        },\n        error: function (response) {\n          // In the response we should get back some error markup. We should display this.\n\n        },\n        complete: function () {\n          // There should be no working state.\n          $commentWrapper.removeClass('working')\n        }\n      })\n\n      return false\n    })\n  }\n\n  function handleCommentDropdownState (event) {\n\n    // If checkbox is not available, do nothing.\n    if (!$commentCheckboxes.length) {\n      return\n    }\n\n    if (!$(event.target).is($commentDropdown)) {\n      $commentCheckboxes.prop('checked', false)\n    }\n  }\n\n  function copyLinkToClipboard (event) {\n\n    event.preventDefault()\n\n    let copyText = $(this).attr('href'),\n      succeeded\n\n    $notification.removeClass(NOTIFICATION_VISIBLE_CLASS)\n\n    document.addEventListener('copy', function (e) {\n      e.clipboardData.setData('text/plain', copyText)\n      e.preventDefault()\n    }, true)\n\n    try {\n      succeeded = document.execCommand('copy')\n    } catch (err) {\n      succeeded = false\n    }\n\n    if (succeeded) {\n      setTimeout(function () {\n        $notification.addClass(NOTIFICATION_VISIBLE_CLASS)\n      }, 0)\n    }\n  }\n\n})(jQuery, window)\n","(function() { module.exports = this[\"novablocks\"][\"icons\"]; }());"],"sourceRoot":""}