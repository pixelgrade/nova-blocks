{"version":3,"sources":["webpack://novablocks/webpack/bootstrap","webpack://novablocks/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://novablocks/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://novablocks/./node_modules/classnames/index.js","webpack://novablocks/@novablocks/collection/src/area-debug.js","webpack://novablocks/@novablocks/collection/src/collection-controls.js","webpack://novablocks/@novablocks/collection/src/collection.js","webpack://novablocks/@novablocks/collection/src/grid-generator-controls.js","webpack://novablocks/@novablocks/collection/src/grid-generator.js","webpack://novablocks/@novablocks/collection/src/index.js","webpack://novablocks/@novablocks/collection/src/layout-engine.js","webpack://novablocks/@novablocks/collection/src/preview.js","webpack://novablocks/@novablocks/collection/src/utils.js","webpack://novablocks/@novablocks/collection/src/with-grid-generator.js","webpack://novablocks/external {\"this\":[\"novablocks\",\"blockEditor\"]}","webpack://novablocks/external {\"this\":[\"novablocks\",\"components\"]}","webpack://novablocks/external {\"this\":[\"novablocks\",\"utils\"]}","webpack://novablocks/external {\"this\":[\"wp\",\"blockEditor\"]}","webpack://novablocks/external {\"this\":[\"wp\",\"components\"]}","webpack://novablocks/external {\"this\":[\"wp\",\"compose\"]}","webpack://novablocks/external {\"this\":[\"wp\",\"element\"]}","webpack://novablocks/external {\"this\":[\"wp\",\"hooks\"]}","webpack://novablocks/external {\"this\":[\"wp\",\"i18n\"]}","webpack://novablocks/external {\"this\":\"lodash\"}"],"names":["AreaDebug","area","nth","postsCount","initialPostsCount","width","height","spotRatio","CollectionInspectorControls","props","attributes","contentAlign","containerHeight","imageResizing","level","imagePadding","setAttributes","onChange","__","label","value","CollectionTitle","showCollectionTitle","title","collectionTitleLevel","CollectionSubtitle","showCollectionSubtitle","subtitle","CollectionPreview","hasAppender","blockStyle","contentStyle","columns","postsToShow","isLandscape","blockClassName","thumbnailAspectRatio","style","getCardMediaPaddingTop","widthRatio","heightRatio","Math","ceil","className","classnames","getAreaClassnameByWidthRatio","getAreaClassnameByHeightRatio","children","Collection","CollectionHeader","Component","getMinFeatureSize","getMaxFeatureSize","gridcolumns","getMinFeaturePosition","getMaxFeaturePosition","featuresize","getMinColumnsFragmentation","getMaxColumnsFragmentation","max","pow","clamp","number","min","normalizeAttributes","newAttributes","atts","featureposition","fragmentation","getRandomAttributes","getRandomBetween","gridrows","minFeatureSize","maxFeatureSize","minFeaturePosition","maxFeaturePosition","minColumnsFragmentation","maxColumnsFragmentation","imageweightleft","imageweightright","metadetailsleft","metadetailsright","boostfeature","getRandomBooleanValue","subfeature","balancemdandiw","hierarchycrossing","flipcolsrows","layoutStyle","automaticPostsNumber","headerPosition","LayoutControls","preset","status","ClassicLayoutControls","PostsCountControl","tempPostsToShow","getAttributesByHeaderColumn","headerColumn","areaColumns","applyLayoutEngine","headerOptimalPositions","getOptimalHeaderPosition","ParametricLayoutControls","normalizedAttributes","autoPostsCount","getPostsCount","isUndefined","getControlsClasses","length","DebugControls","withSettings","toggleScale","toggleMask","settings","debug","GridGenerator","ClassicLayoutPreview","ParametricLayoutPreview","utils","state","console","log","emptyChar","nthMatrix","initBidimensionalMatrix","imageWeightMatrix","metaDetailsMatrix","widthMatrix","initUnidimensionalMatrix","verticalFragmentSizeMatrix","i","j","widthIdx","frgIdx","cutMarker","padEnd","end","round","slice","abs","maxMetaDetailsPos","maxImageWeightPos","featureValue","maxValue","maxMetaDetailsValue","maxImageWeightValue","floor","currentNth","currentColumnStartCol","currentPostStartRow","join","maxNth","hierachyCrossingStrenth","currentPostDetails","getNthPostDetails","endGridColumn","topNeighborPostDetails","startGridRow","bottomNeighborPostDetails","endGridRow","replacedPostScore","imageWeight","metaDetails","counter","postDetails","currentPostScore","startGridColumn","renumberNthMatrix","finalNthMatrix","transposeMatrix","finalMetaMatrix","finalImageMatrix","getGroupedPostAreas","moveLargestColumnToStart","firstRowColumns","filter","column","row","sort","col1","col2","largestColumnIndex","findIndex","splice","logMatrix","matrix","areasArray","getAreasArray","mergeSimilarAreas","normalizeAreas","map","col","areas","forEach","currentColumn","currentArea","compareColumn","compareArea","merged","push","randomColumn","getNthValues","values","indexOf","a","b","replaceNth","index","find","nth1","nth2","getMaxNth","mergeAreaNeighbours","getAreaWidth","getAreaHeight","initialWidth","initialHeight","currentAreaIndex","Array","isArray","nextRow","nextCol","nextWidth","nextHeight","nextNth","nextNthStart","searching","mergeable","getFirstOccurence","fillArea","newNth","character","nullChar","posts","showMedia","showMeta","showTitle","showDescription","showButtons","cardProps","placeholder","hasFixedAspectRatio","showContent","post","idx","from","keys","obj","getContent","cardsCount","classname","addedCards","redistributeCardsInAreas","getGridStyle","areaColumn","areaColumnStyle","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","getParametricLayoutAreaClassName","landscape","getGridColumnsAndRows","display","gridTemplateColumns","gridTemplateRows","reduce","total","columnTotal","totalSpots","totalPosts","remainingPosts","totalRatio","areaColumnSpotRatio","getCardRatio","extraPosts","areaExtraPosts","positions","columnIndex","areaIndex","ratio","getAreaBaseClassname","getAreaClassnameByAspectRatio","source","Object","enableGridGeneratorControls","withGridGeneratorControls","createHigherOrderComponent","OriginalComponent","includes","name","addFilter","addGridGeneratorAttributes","block","assign"],"mappings":"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","file":"./build/collection/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/collection/build-module/index.js\");\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","const AreaDebug = ( { area } ) => {\n\treturn (\n\t\t<div className={ 'novablocks-grid__debug' }>\n\t\t\t{`nth: ${ area.nth }`}<br />\n\t\t\t{`posts count: ${ area.postsCount }`}<br />\n\t\t\t{`initial posts count: ${ area.initialPostsCount }`}<br />\n\t\t\t{`width: ${ area.width }`}<br />\n\t\t\t{`height: ${ area.height }`}<br />\n\t\t\t{`spot ratio: ${ area.spotRatio }`}\n\t\t</div>\n\t);\n};\n\nexport default AreaDebug;\n","import {\n\tHeadingToolbar,\n\tControlsSection,\n\tControlsTab\n} from \"@novablocks/block-editor\";\n\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\tPanelRow,\n\tRadioControl,\n\tRangeControl,\n } from '@wordpress/components';\n\nimport {\n\tAlignmentToolbar,\n } from '@wordpress/block-editor';\n\nconst CollectionInspectorControls = ( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\tcontentAlign,\n\t\t\tcontainerHeight,\n\t\t\timageResizing,\n\t\t\tlevel,\n\t\t\timagePadding,\n\t\t},\n\t\tsetAttributes,\n\t} = props;\n\n\tconst onChange = typeof props.onChange !== 'function' ? setAttributes : props.onChange;\n\n\treturn (\n\t\t<ControlsSection label={ __( 'Display' ) }>\n\t\t\t<ControlsTab label={ __( 'Settings' ) }>\n\t\t\t\t<RadioControl\n\t\t\t\t\tkey={ 'collection-image-resizing' }\n\t\t\t\t\tlabel={ __( 'Image resizing' ) }\n\t\t\t\t\tselected={ imageResizing }\n\t\t\t\t\tonChange={ imageResizing => {\n\t\t\t\t\t\tsetAttributes( { imageResizing } )\n\t\t\t\t\t} }\n\t\t\t\t\toptions={ [\n\t\t\t\t\t\t{ label: 'Stretch to fill the container', value: 'cropped' },\n\t\t\t\t\t\t{ label: 'Shrink to fit (no crop)', value: 'original' },\n\t\t\t\t\t] }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tkey={ 'collection-image-container-height' }\n\t\t\t\t\tlabel={ __( 'Image container height', '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ containerHeight }\n\t\t\t\t\tonChange={ containerHeight => {\n\t\t\t\t\t\tsetAttributes( { containerHeight } )\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 100 }\n\t\t\t\t\tstep={ 5 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tkey={ 'collection-image-padding' }\n\t\t\t\t\tlabel={ __( 'Image padding', '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ imagePadding }\n\t\t\t\t\tonChange={ imagePadding => {\n\t\t\t\t\t\tsetAttributes( { imagePadding } )\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 100 }\n\t\t\t\t\tstep={ 50 }\n\t\t\t\t/>\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<span>{__( 'Title Level', '__plugin_txtd' )}</span>\n\t\t\t\t\t<HeadingToolbar\n\t\t\t\t\t\tminLevel={2}\n\t\t\t\t\t\tmaxLevel={4}\n\t\t\t\t\t\tselectedLevel={level}\n\t\t\t\t\t\tonChange={( level ) => {\n\t\t\t\t\t\t\tonChange( {level} )\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelRow>\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<span>{__( 'Content Alignment', '__plugin_txtd' )}</span>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue={contentAlign}\n\t\t\t\t\t\tisCollapsed={false}\n\t\t\t\t\t\tonChange={( contentAlign ) => {\n\t\t\t\t\t\t\tonChange( {contentAlign} )\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelRow>\n\t\t\t</ControlsTab>\n\t\t</ControlsSection>\n\t)\n}\n\nexport default CollectionInspectorControls;\n","import classnames from 'classnames';\n\nimport { RichText } from '@wordpress/block-editor';\nimport { Fragment } from '@wordpress/element';\n\nimport { getCardMediaPaddingTop } from '@novablocks/utils'\n\nimport attributes from './collection-attributes.json';\nimport InspectorControls from \"./collection-controls\";\n\nimport {\n\tgetAreaClassnameByWidthRatio,\n\tgetAreaClassnameByHeightRatio\n} from './utils';\n\nexport const CollectionTitle = ( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\tshowCollectionTitle,\n\t\t\ttitle,\n\t\t\tcollectionTitleLevel,\n\t\t},\n\t\tsetAttributes,\n\t} = props;\n\n\tif ( ! showCollectionTitle ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"block-editor-block-list__block wp-block novablocks-collection__title\" data-align=\"wide\">\n\t\t\t<RichText\n\t\t\t\ttagName={ `h${ collectionTitleLevel }` }\n\t\t\t\tvalue={ title }\n\t\t\t\tonChange={ title => {\n\t\t\t\t\tsetAttributes( { title } );\n\t\t\t\t} }\n\t\t\t\tallowedFormats = {[ 'core/link' ]}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport const CollectionSubtitle = ( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\tshowCollectionSubtitle,\n\t\t\tsubtitle,\n\t\t},\n\t\tsetAttributes,\n\t} = props;\n\n\tif ( ! showCollectionSubtitle ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"block-editor-block-list__block wp-block novablocks-collection__subtitle\" data-align=\"wide\">\n\t\t\t<RichText\n\t\t\t\ttagName={ 'p' }\n\t\t\t\tclassName={ 'is-style-lead' }\n\t\t\t\tvalue={ subtitle }\n\t\t\t\tonChange={ subtitle => {\n\t\t\t\t\tsetAttributes( { subtitle } );\n\t\t\t\t} }\n\t\t\t\tallowedFormats={ [] }\n\t\t\t/>\n\t\t</div>\n\t)\n};\n\nexport const CollectionPreview = ( props ) => {\n\n\tconst {\n\t\tattributes,\n\t\thasAppender\n\t} = props;\n\n\tconst {\n\t\tblockStyle,\n\t\tcontentStyle,\n\n\t\tcontentAlign,\n\t\timageResizing,\n\t\tcontainerHeight,\n\t\timagePadding,\n\n\t\tcolumns,\n\t\tpostsToShow,\n\t\tisLandscape,\n\t} = attributes;\n\n\tconst blockClassName = 'novablocks-collection';\n\tconst thumbnailAspectRatio = attributes.thumbnailAspectRatio || containerHeight;\n\n\tconst style = {\n\t\t'--card-media-padding': imagePadding,\n\t\t'--card-media-padding-top': getCardMediaPaddingTop( thumbnailAspectRatio ),\n\t\t'--card-media-object-fit': imageResizing === 'cropped' ? 'cover' : 'scale-down',\n\t};\n\n\tconst widthRatio = 1 / columns;\n\tconst heightRatio = 1 / Math.ceil( postsToShow / columns );\n\n\tconst className = classnames(\n\t\tprops.className,\n\t\tblockClassName,\n\t\t'novablocks-block',\n\t\t`${ blockClassName }--align-${ contentAlign }`,\n\t\t`block-is-${ blockStyle }`,\n\t\t`content-is-${ contentStyle }`,\n\t\t{\n\t\t\t'has-appender': hasAppender,\n\t\t},\n\t\t//\n\t\t'novablocks-grid__area',\n\t\t{\n\t\t\t'novablocks-grid__area--portrait': ! isLandscape,\n\t\t\t'novablocks-grid__area--landscape': isLandscape,\n\t\t},\n\t\tgetAreaClassnameByWidthRatio( widthRatio ),\n\t\tgetAreaClassnameByHeightRatio( heightRatio ),\n\t);\n\n\treturn (\n\t\t<div className={ className } style={ style }>\n\t\t\t<div className=\"wp-block-group__inner-container\">\n\t\t\t\t<CollectionHeader { ...props } />\n\t\t\t\t<div className=\"block-editor-block-list__block wp-block novablocks-collection__cards\" data-align=\"wide\">\n\t\t\t\t\t<div className={ `${ blockClassName }__layout` }>\n\t\t\t\t\t\t{ props.children }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nconst Collection = ( props ) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<InspectorControls { ...props } />\n\t\t\t<CollectionPreview { ...props } />\n\t\t</Fragment>\n\t)\n};\n\nexport const CollectionHeader = ( props ) => {\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<CollectionTitle { ...props } />\n\t\t\t<CollectionSubtitle { ...props } />\n\t\t</Fragment>\n\t)\n};\n\nexport default {\n  Component: Collection,\n  attributes\n};\n","import { isUndefined } from \"lodash\";\n\nimport {\n\tControlsGroup,\n\tControlsSection,\n\tControlsTab,\n\tPresetControl,\n} from \"@novablocks/block-editor\";\n\nimport {\n\tgetControlsClasses,\n\tgetRandomBetween,\n\tgetRandomBooleanValue,\n} from \"@novablocks/utils\";\n\nimport {\n\twithSettings\n} from \"@novablocks/block-editor\"\n\nimport { applyLayoutEngine } from './layout-engine'\nimport {\n\tgetOptimalHeaderPosition,\n\tgetPostsCount\n} from './utils';\n\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\n\nimport {\n\tRadioControl,\n\tRangeControl,\n\tToggleControl,\n} from '@wordpress/components';\n\nconst getMinFeatureSize = ( attributes ) => {\n\treturn 1;\n};\n\nconst getMaxFeatureSize = ( attributes ) => {\n\treturn attributes.gridcolumns;\n};\n\nconst getMinFeaturePosition = ( attributes ) => {\n\treturn 1;\n};\n\nconst getMaxFeaturePosition = ( attributes ) => {\n\treturn attributes.gridcolumns - attributes.featuresize + 1;\n};\n\nconst getMinColumnsFragmentation = ( attributes ) => {\n\treturn 0;\n};\n\nconst getMaxColumnsFragmentation = ( attributes ) => {\n\treturn Math.max( 0, Math.pow( 2, attributes.gridcolumns - attributes.featuresize - 1 ) - 1 );\n};\n\nconst clamp = ( number, min, max ) => {\n\treturn Math.min( Math.max( min, number ), max )\n};\n\nconst normalizeAttributes = ( newAttributes, attributes ) => {\n\n\tconst atts = {\n\t\t...attributes,\n\t\t...newAttributes\n\t};\n\n\tatts.featuresize = clamp( atts.featuresize, getMinFeatureSize( atts ), getMaxFeatureSize( atts ) );\n\tatts.featureposition = clamp( atts.featureposition, getMinFeaturePosition( atts ), getMaxFeaturePosition( atts ) );\n\tatts.fragmentation = clamp( atts.fragmentation, getMinColumnsFragmentation( atts ), getMaxColumnsFragmentation( atts ) );\n\n\treturn atts;\n};\n\nconst getRandomAttributes = () => {\n\n\tconst postsToShow = getRandomBetween( 3, 20 );\n\tconst gridcolumns = getRandomBetween( 2, 6 );\n\tconst gridrows = getRandomBetween( 2, 12 );\n\n\tconst minFeatureSize = 1;\n\tconst maxFeatureSize = Math.ceil( gridcolumns * 0.75 );\n\tconst featuresize = getRandomBetween( minFeatureSize, maxFeatureSize );\n\n\tconst minFeaturePosition = 1;\n\tconst maxFeaturePosition = gridcolumns - featuresize + 1;\n\tconst featureposition = getRandomBetween( minFeaturePosition, maxFeaturePosition );\n\n\tconst minColumnsFragmentation = 0;\n\tconst maxColumnsFragmentation = Math.max( 0, Math.pow( 2, gridcolumns - featuresize - 1 ) - 1 );\n\tconst fragmentation = getRandomBetween( minColumnsFragmentation, maxColumnsFragmentation );\n\n\tconst imageweightleft = getRandomBetween(0, 10);\n\tconst imageweightright = getRandomBetween(0, 10);\n\tconst metadetailsleft = getRandomBetween(0, 10);\n\tconst metadetailsright = getRandomBetween(0, 10);\n\n\tconst boostfeature = getRandomBooleanValue();\n\tconst subfeature = getRandomBooleanValue();\n\tconst balancemdandiw = getRandomBooleanValue();\n\tconst hierarchycrossing = getRandomBetween(0, 200);\n\tconst flipcolsrows = getRandomBooleanValue();\n\n\treturn {\n\t\tlayoutStyle: 'parametric',\n\t\tpostsToShow,\n\t\tautomaticPostsNumber: true,\n\t\tgridcolumns,\n\t\tgridrows,\n\t\tfeaturesize,\n\t\tfeatureposition,\n\t\tfragmentation,\n\t\timageweightleft,\n\t\timageweightright,\n\t\tmetadetailsleft,\n\t\tmetadetailsright,\n\t\tboostfeature,\n\t\tsubfeature,\n\t\tbalancemdandiw,\n\t\thierarchycrossing,\n\t\tflipcolsrows,\n\t\theaderPosition: getRandomBetween(0, 1),\n\t}\n};\n\nconst LayoutControls = ( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\tlayoutStyle\n\t\t},\n\t\tsetAttributes\n\t} = props;\n\n\treturn (\n\t\t<ControlsSection label={ __( 'Grid Layout' ) } priority={ 100 }>\n\t\t\t<ControlsTab label={ __( 'General' ) }>\n\t\t\t\t<PresetControl\n\t\t\t\t\tkey={ 'novablocks-collection-layout-preset' }\n\t\t\t\t\tlabel={ __( 'Choose a layout preset:', '__plugin_txtd' ) }\n\t\t\t\t\toptions={ [ {\n\t\t\t\t\t\tlabel: 'L27: Brancusi',\n\t\t\t\t\t\tvalue: 'tear2down7',\n\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\tpostsToShow: 6,\n\t\t\t\t\t\t\tgridcolumns: 6,\n\t\t\t\t\t\t\tgridrows: 6,\n\t\t\t\t\t\t\tfeaturesize: 4,\n\t\t\t\t\t\t\tfeatureposition: 1,\n\t\t\t\t\t\t\tfragmentation: 1,\n\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\timageweightright: 2,\n\t\t\t\t\t\t\tmetadetailsleft: 10,\n\t\t\t\t\t\t\tmetadetailsright: 6,\n\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\tsubfeature: true,\n\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\thierarchycrossing: 30,\n\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L47: Kafka',\n\t\t\t\t\t\t\tvalue: 'tear4down7',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 6,\n\t\t\t\t\t\t\t\tgridcolumns: 12,\n\t\t\t\t\t\t\t\tgridrows: 8,\n\t\t\t\t\t\t\t\tfeaturesize: 7,\n\t\t\t\t\t\t\t\tfeatureposition: 3,\n\t\t\t\t\t\t\t\tfragmentation: 0,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 0,\n\t\t\t\t\t\t\t\tmetadetailsright: 10,\n\t\t\t\t\t\t\t\tboostfeature: true,\n\t\t\t\t\t\t\t\tsubfeature: true,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 153,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L13: Aristotle',\n\t\t\t\t\t\t\tvalue: 'tear1down3',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 6,\n\t\t\t\t\t\t\t\tgridcolumns: 5,\n\t\t\t\t\t\t\t\tgridrows: 4,\n\t\t\t\t\t\t\t\tfeaturesize: 2,\n\t\t\t\t\t\t\t\tfeatureposition: 2,\n\t\t\t\t\t\t\t\tfragmentation: 0,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 6,\n\t\t\t\t\t\t\t\tmetadetailsright: 3,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: false,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L19: Nietzsche',\n\t\t\t\t\t\t\tvalue: 'tear1down9',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 11,\n\t\t\t\t\t\t\t\tgridcolumns: 6,\n\t\t\t\t\t\t\t\tgridrows: 5,\n\t\t\t\t\t\t\t\tfeaturesize: 3,\n\t\t\t\t\t\t\t\tfeatureposition: 2,\n\t\t\t\t\t\t\t\tfragmentation: 2,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 0,\n\t\t\t\t\t\t\t\tmetadetailsright: 0,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: true,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L23: Popper',\n\t\t\t\t\t\t\tvalue: 'tear1down9bis',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 11,\n\t\t\t\t\t\t\t\tgridcolumns: 7,\n\t\t\t\t\t\t\t\tgridrows: 5,\n\t\t\t\t\t\t\t\tfeaturesize: 3,\n\t\t\t\t\t\t\t\tfeatureposition: 3,\n\t\t\t\t\t\t\t\tfragmentation: 2,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 0,\n\t\t\t\t\t\t\t\tmetadetailsright: 0,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: true,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\tcontainerHeight: 45,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L10: Tolstoy',\n\t\t\t\t\t\t\tvalue: 'tear1down0',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 10,\n\t\t\t\t\t\t\t\tgridcolumns: 10,\n\t\t\t\t\t\t\t\tgridrows: 6,\n\t\t\t\t\t\t\t\tfeaturesize: 3,\n\t\t\t\t\t\t\t\tfeatureposition: 6,\n\t\t\t\t\t\t\t\tfragmentation: 0,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 0,\n\t\t\t\t\t\t\t\tmetadetailsright: 0,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: false,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L15: Asimov',\n\t\t\t\t\t\t\tvalue: 'tear1down5',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 7,\n\t\t\t\t\t\t\t\tgridcolumns: 6,\n\t\t\t\t\t\t\t\tgridrows: 6,\n\t\t\t\t\t\t\t\tfeaturesize: 2,\n\t\t\t\t\t\t\t\tfeatureposition: 4,\n\t\t\t\t\t\t\t\tfragmentation: 0,\n\t\t\t\t\t\t\t\timageweightleft: 8,\n\t\t\t\t\t\t\t\timageweightright: 2,\n\t\t\t\t\t\t\t\tmetadetailsleft: 7,\n\t\t\t\t\t\t\t\tmetadetailsright: 2,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: false,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L45: Orwell',\n\t\t\t\t\t\t\tvalue: 'tear4down5',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 13,\n\t\t\t\t\t\t\t\tgridcolumns: 8,\n\t\t\t\t\t\t\t\tgridrows: 6,\n\t\t\t\t\t\t\t\tfeaturesize: 4,\n\t\t\t\t\t\t\t\tfeatureposition: 1,\n\t\t\t\t\t\t\t\tfragmentation: 2,\n\t\t\t\t\t\t\t\timageweightleft: 8,\n\t\t\t\t\t\t\t\timageweightright: 8,\n\t\t\t\t\t\t\t\tmetadetailsleft: 7,\n\t\t\t\t\t\t\t\tmetadetailsright: 2,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: false,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 120,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L12: Dostoevsky',\n\t\t\t\t\t\t\tvalue: 'tear1down2',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 7,\n\t\t\t\t\t\t\t\tgridcolumns: 6,\n\t\t\t\t\t\t\t\tgridrows: 4,\n\t\t\t\t\t\t\t\tfeaturesize: 3,\n\t\t\t\t\t\t\t\tfeatureposition: 1,\n\t\t\t\t\t\t\t\tfragmentation: 2,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 7,\n\t\t\t\t\t\t\t\tmetadetailsright: 0,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: false,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 50,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L32: Eliade',\n\t\t\t\t\t\t\tstatus: 'development',\n\t\t\t\t\t\t\tvalue: 'tear3down2',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 8,\n\t\t\t\t\t\t\t\tgridcolumns: 4,\n\t\t\t\t\t\t\t\tgridrows: 8,\n\t\t\t\t\t\t\t\tfeaturesize: 2,\n\t\t\t\t\t\t\t\tfeatureposition: 2,\n\t\t\t\t\t\t\t\tfragmentation: 0,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 0,\n\t\t\t\t\t\t\t\tmetadetailsright: 3,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: true,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L30: Tolkien',\n\t\t\t\t\t\t\tvalue: 'tear3down0',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'parametric',\n\t\t\t\t\t\t\t\tpostsToShow: 5,\n\t\t\t\t\t\t\t\tgridcolumns: 4,\n\t\t\t\t\t\t\t\tgridrows: 8,\n\t\t\t\t\t\t\t\tfeaturesize: 2,\n\t\t\t\t\t\t\t\tfeatureposition: 2,\n\t\t\t\t\t\t\t\tfragmentation: 0,\n\t\t\t\t\t\t\t\timageweightleft: 1,\n\t\t\t\t\t\t\t\timageweightright: 0,\n\t\t\t\t\t\t\t\tmetadetailsleft: 0,\n\t\t\t\t\t\t\t\tmetadetailsright: 3,\n\t\t\t\t\t\t\t\tboostfeature: false,\n\t\t\t\t\t\t\t\tsubfeature: true,\n\t\t\t\t\t\t\t\tbalancemdandiw: false,\n\t\t\t\t\t\t\t\thierarchycrossing: 0,\n\t\t\t\t\t\t\t\tflipcolsrows: false,\n\t\t\t\t\t\t\t\theaderPosition: 0,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'L03: Dumas',\n\t\t\t\t\t\t\tvalue: 'tear0down3',\n\t\t\t\t\t\t\tpreset: {\n\t\t\t\t\t\t\t\tlayoutStyle: 'classic',\n\t\t\t\t\t\t\t\tpostsToShow: 6,\n\t\t\t\t\t\t\t\tcolumns: 3,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ] }\n\t\t\t\t\trandomize={ getRandomAttributes }\n\t\t\t\t/>\n\t\t\t</ControlsTab>\n\t\t\t<ControlsTab label={ __( 'Settings' ) }>\n\t\t\t\t<ControlsGroup title={ __( 'Grid Anatomy' ) }>\n\t\t\t\t\t<RadioControl\n\t\t\t\t\t\tkey={ 'novablocks-collection-layout-style-controls' }\n\t\t\t\t\t\tselected={ layoutStyle }\n\t\t\t\t\t\tclassName={ 'novablocks-collection-layout' }\n\t\t\t\t\t\tonChange={ ( layoutStyle ) => {\n\t\t\t\t\t\t\tsetAttributes( { layoutStyle } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t{ label: 'Parametric Grid', value: 'parametric' },\n\t\t\t\t\t\t\t{ label: 'Classic Grid', value: 'classic' },\n\t\t\t\t\t\t] }\n\t\t\t\t\t/>\n\t\t\t\t</ControlsGroup>\n\t\t\t\t{ layoutStyle === 'classic' && <ClassicLayoutControls { ...props } /> }\n\t\t\t\t{ layoutStyle === 'parametric' && <ParametricLayoutControls { ...props } /> }\n\t\t\t</ControlsTab>\n\t\t</ControlsSection>\n\t);\n};\n\nconst ClassicLayoutControls = ( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\tcolumns,\n\t\t\tisLandscape\n\t\t},\n\t\tsetAttributes\n\t} = props;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ControlsGroup title={ __( 'Cards Count' ) }>\n\t\t\t\t<PostsCountControl { ...props } />\n\t\t\t\t<RangeControl\n\t\t\t\t\tkey={ 'posts-collection-display-controls' }\n\t\t\t\t\tvalue={ columns }\n\t\t\t\t\tonChange={ ( columns ) => setAttributes( { columns } ) }\n\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\tmin={ 1 }\n\t\t\t\t\tmax={ 4 }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t\t<ControlsGroup title={ __( 'Card Layout' ) }>\n\t\t\t\t<RadioControl\n\t\t\t\t\tkey={ 'novablocks-card-layout-controls' }\n\t\t\t\t\tselected={ isLandscape ? 'landscape' : 'portrait' }\n\t\t\t\t\tclassName={ 'novablocks-card-layout' }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tsetAttributes( { isLandscape: value === 'landscape' } );\n\t\t\t\t\t} }\n\t\t\t\t\toptions={ [\n\t\t\t\t\t\t{ label: 'Vertical', value: 'portrait' },\n\t\t\t\t\t\t{ label: 'Horizontal', value: 'landscape' }\n\t\t\t\t\t] }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t</Fragment>\n\t)\n};\n\nconst PostsCountControl = ( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\tpostsToShow\n\t\t},\n\t\tsetAttributes\n\t} = props;\n\n\treturn (\n\t\t<RangeControl\n\t\t\tlabel={ __( `Number of Items`, '__plugin_txtd' ) }\n\t\t\tvalue={ postsToShow }\n\t\t\tonChange={ postsToShow => {\n\t\t\t\tsetAttributes( {\n\t\t\t\t\tpostsToShow,\n\t\t\t\t\ttempPostsToShow: postsToShow,\n\t\t\t\t\tautomaticPostsNumber: false,\n\t\t\t\t} );\n\t\t\t} }\n\t\t\tmin={ 1 }\n\t\t\tmax={ 20 }\n\t\t/>\n\t);\n};\n\nconst getAttributesByHeaderColumn = ( attributes ) => {\n\n\tconst { headerColumn } = attributes;\n\tconst areaColumns = applyLayoutEngine( attributes );\n\tconst headerOptimalPositions = getOptimalHeaderPosition( areaColumns );\n\n\treturn {\n\t\t...attributes,\n\t\theaderPosition: headerOptimalPositions[ headerColumn ],\n\t}\n};\n\nconst ParametricLayoutControls = ( props ) => {\n\n\tconst {\n\t\tattributes,\n\t} = props;\n\n\tconst {\n\t\tfeaturesize,\n\t\tfeatureposition,\n\t\tfragmentation,\n\n\t\tgridcolumns,\n\t\tgridrows,\n\n\t\timageweightleft,\n\t\timageweightright,\n\t\tmetadetailsleft,\n\t\tmetadetailsright,\n\n\t\tboostfeature,\n\t\tsubfeature,\n\t\tbalancemdandiw,\n\t\thierarchycrossing,\n\t\tflipcolsrows,\n\n\t\tautomaticPostsNumber,\n\t\tpostsToShow,\n\t\theaderPosition,\n\t\theaderColumn,\n\n\t\tshowCollectionTitle,\n\t\tshowCollectionSubtitle,\n\t} = attributes;\n\n\t// used to store previous values of postsToShow\n\tconst tempPostsToShow = attributes.tempPostsToShow || postsToShow;\n\n\tconst setAttributes = ( newAttributes ) => {\n\t\tconst normalizedAttributes = normalizeAttributes( newAttributes, attributes );\n\t\tprops.setAttributes( normalizedAttributes );\n\t};\n\n\tconst areaColumns = applyLayoutEngine( attributes );\n\tconst autoPostsCount = getPostsCount( areaColumns );\n\tconst headerOptimalPositions = getOptimalHeaderPosition( areaColumns );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<DebugControls { ...props } />\n\t\t\t<ControlsGroup title={ __( 'Grid Anatomy' ) }>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Columns`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ gridcolumns }\n\t\t\t\t\tonChange={ gridcolumns => {\n\t\t\t\t\t\tif ( ! isUndefined( gridcolumns ) ) {\n\t\t\t\t\t\t\tsetAttributes( { gridcolumns } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 1 }\n\t\t\t\t\tmax={ 12 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Rows`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ gridrows }\n\t\t\t\t\tonChange={ gridrows => {\n\t\t\t\t\t\tif ( ! isUndefined( gridrows ) ) {\n\t\t\t\t\t\t\tsetAttributes( { gridrows } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 1 }\n\t\t\t\t\tmax={ 12 }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t\t<ControlsGroup title={ __( 'Breaking the Grid' ) }>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Featured Area Size`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ featuresize }\n\t\t\t\t\tonChange={ featuresize => {\n\t\t\t\t\t\tif ( ! isUndefined( featuresize ) ) {\n\t\t\t\t\t\t\tsetAttributes( { featuresize } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ getMinFeatureSize( attributes ) }\n\t\t\t\t\tmax={ getMaxFeatureSize( attributes ) }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Featured Area Position`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ featureposition }\n\t\t\t\t\tonChange={ featureposition => {\n\t\t\t\t\t\tif ( ! isUndefined( featureposition ) ) {\n\t\t\t\t\t\t\tsetAttributes( { featureposition } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ getMinFeaturePosition( attributes ) }\n\t\t\t\t\tmax={ getMaxFeaturePosition( attributes ) }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Grid Areas Fragmentation`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ fragmentation }\n\t\t\t\t\tonChange={ fragmentation => {\n\t\t\t\t\t\tif ( ! isUndefined( fragmentation ) ) {\n\t\t\t\t\t\t\tsetAttributes( { fragmentation } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ getMinColumnsFragmentation( attributes ) }\n\t\t\t\t\tmax={ getMaxColumnsFragmentation( attributes ) }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Grid Areas Crossing`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ hierarchycrossing }\n\t\t\t\t\tonChange={ hierarchycrossing => {\n\t\t\t\t\t\tif ( ! isUndefined( hierarchycrossing ) ) {\n\t\t\t\t\t\t\tsetAttributes( { hierarchycrossing } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 200 }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t\t<ControlsGroup title={ __( 'Items Count' ) }>\n\t\t\t\t<div className={ getControlsClasses( attributes, ( { automaticPostsNumber, postsToShow } ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpostsToShow: automaticPostsNumber ? -1 : postsToShow\n\t\t\t\t\t}\n\t\t\t\t} ) }>\n\t\t\t\t\t<PostsCountControl { ...props } />\n\t\t\t\t</div>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__( 'Auto-count Items Number', '__plugin_txtd' )}\n\t\t\t\t\tchecked={ automaticPostsNumber }\n\t\t\t\t\tonChange={ ( automaticPostsNumber ) => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tpostsToShow: automaticPostsNumber ? autoPostsCount : tempPostsToShow,\n\t\t\t\t\t\t\ttempPostsToShow: postsToShow,\n\t\t\t\t\t\t\tautomaticPostsNumber\n\t\t\t\t\t\t} )\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t\t<ControlsGroup title={ __( 'Items Regularity' ) }>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Start of Image Variance`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ imageweightleft }\n\t\t\t\t\tonChange={ imageweightleft => {\n\t\t\t\t\t\tif ( ! isUndefined( imageweightleft ) ) {\n\t\t\t\t\t\t\tsetAttributes( { imageweightleft } )\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 10 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `End of Image Variance`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ imageweightright }\n\t\t\t\t\tonChange={ imageweightright => {\n\t\t\t\t\t\tif ( ! isUndefined( imageweightright ) ) {\n\t\t\t\t\t\t\tsetAttributes( { imageweightright } )\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 10 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `Start of Meta Fidelity`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ metadetailsleft }\n\t\t\t\t\tonChange={ metadetailsleft => {\n\t\t\t\t\t\tif ( ! isUndefined( metadetailsleft ) ) {\n\t\t\t\t\t\t\tsetAttributes( { metadetailsleft } )\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 10 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( `End of Meta Fidelity`, '__plugin_txtd' ) }\n\t\t\t\t\tvalue={ metadetailsright }\n\t\t\t\t\tonChange={ metadetailsright => {\n\t\t\t\t\t\tif ( ! isUndefined( metadetailsright ) ) {\n\t\t\t\t\t\t\tsetAttributes( { metadetailsright } )\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 10 }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t\t<ControlsGroup title={ __( 'Miscellanous Parameters' ) }>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__( 'Boost Featured Area Emphasis', '__plugin_txtd' )}\n\t\t\t\t\tchecked={ boostfeature }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetAttributes( { boostfeature : ! boostfeature } )\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__( 'Display Sub-featured Area', '__plugin_txtd' )}\n\t\t\t\t\tchecked={ subfeature }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetAttributes( { subfeature : ! subfeature } )\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__( 'Balance Meta and Image', '__plugin_txtd' )}\n\t\t\t\t\tchecked={ balancemdandiw }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetAttributes( { balancemdandiw : ! balancemdandiw } )\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__( 'Flip Cols and Rows', '__plugin_txtd' )}\n\t\t\t\t\tchecked={ flipcolsrows }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetAttributes( { flipcolsrows : ! flipcolsrows } )\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</ControlsGroup>\n\t\t\t{\n\t\t\t\t( showCollectionTitle || showCollectionSubtitle ) &&\n\t\t\t\t<ControlsGroup title={ __( 'Block Header' ) }>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel={ __( `Header Placement Area`, '__plugin_txtd' ) }\n\t\t\t\t\t\tvalue={ headerPosition }\n\t\t\t\t\t\tonChange={ headerPosition => {\n\t\t\t\t\t\t\tsetAttributes( { headerPosition } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tmax={ postsToShow + 1 }\n\t\t\t\t\t/>\n\t\t\t\t\t<div key={ 'header-position-customize-1' } className={ getControlsClasses( attributes, getAttributesByHeaderColumn ) }>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tvalue={ headerColumn }\n\t\t\t\t\t\t\tonChange={ ( headerColumn ) => {\n\t\t\t\t\t\t\t\tconst newAttributes = getAttributesByHeaderColumn( { ...attributes, headerColumn } );\n\t\t\t\t\t\t\t\tsetAttributes( newAttributes );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tlabel={ __( 'Header Item Location' ) }\n\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\tmax={ headerOptimalPositions.length - 1 }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</ControlsGroup>\n\t\t\t}\n\t\t</Fragment>\n\t)\n};\n\nconst DebugControls = withSettings(( props ) => {\n\n\tconst {\n\t\tattributes: {\n\t\t\ttoggleScale,\n\t\t\ttoggleMask,\n\t\t},\n\t\tsetAttributes,\n\t\tsettings\n\t} = props;\n\n\tif ( ! settings?.debug ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ControlsGroup title={ __( 'Debug Parameters' ) }>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__( 'Display Preview Scale', '__plugin_txtd' )}\n\t\t\t\tchecked={ toggleScale }\n\t\t\t\tonChange={ () => setAttributes( { toggleScale : ! toggleScale } )}\n\t\t\t/>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__( 'Display Preview Mask', '__plugin_txtd' )}\n\t\t\t\tchecked={ toggleMask }\n\t\t\t\tonChange={ () => setAttributes( { toggleMask : ! toggleMask } )}\n\t\t\t/>\n\t\t</ControlsGroup>\n\n\t);\n});\n\nexport default LayoutControls;\n","import {\n\tClassicLayoutPreview,\n\tParametricLayoutPreview,\n} from './preview'\n\nimport * as utils from './utils';\nimport { applyLayoutEngine } from './layout-engine';\nimport './with-grid-generator';\n\nconst GridGenerator = {\n\tClassicLayoutPreview,\n\tParametricLayoutPreview,\n\tutils: {\n\t\t...utils,\n\t\tapplyLayoutEngine\n\t}\n};\n\nexport default GridGenerator;\n","export { default as GridGenerator } from './grid-generator';\n\nexport {\n\tdefault as Collection,\n\tCollectionHeader,\n\tCollectionPreview,\n\tCollectionTitle,\n\tCollectionSubtitle,\n} from './collection';\n","import { transposeMatrix } from './utils';\n\n// This is the main workhorse containing the logic of our layout \"engine\".\n// Given a state, it will return a list of posts with details to handle their layout.\nexport const applyLayoutEngine = state => {\n\n\tconst debug = false;\n\n\t// Before we can get to generating the \"grid areas\" for each post (meaning start col and row plus end col and ro),\n\t// we need to do a couple of preliminary calculations.\n\t// To hold the data, we will work with matrices, uni or bidimensional, representing the actual columns and rows.\n\t// This way we gain an easier understanding of what is going on at each step of the logic.\n\t// In each matrix we will ignore index 0 since it is easier to start from 1,\n\t// the same way CSS grid columns and rows behave.\n\n\t// The order of these operation is important!\n\n\tdebug ? console.log( \"\\nGenerating a new layout...\\n\\n\"): false;\n\n\t// The \"null\" character:\n\tconst emptyChar = \"X\";\n\n\t// These are the matrices we are going to calculate:\n\t// The nth matrix: a bidimensional matrix the same size as the grid, holding in each cell what nth post should that cell belong to.\n\t// From this matrix we can extrapolate many details since the same nth value will be used to fill all the cells belonging to a post.\n\t// So we know the position and dimensions.\n\tconst nthMatrix = initBidimensionalMatrix([], state.gridcolumns, state.gridrows, emptyChar);\n\t// The image weight matrix\n\tconst imageWeightMatrix = initBidimensionalMatrix([], state.gridcolumns, state.gridrows, emptyChar);\n\t// The meta-details matrix\n\tconst metaDetailsMatrix = initBidimensionalMatrix([], state.gridcolumns, state.gridrows, emptyChar);\n\n\t// Helper matrices.\n\n\t// The columns width matrix\n\tconst widthMatrix = initUnidimensionalMatrix([], state.gridcolumns, emptyChar);\n\t// The vertical fragment size matrix\n\tconst verticalFragmentSizeMatrix = initUnidimensionalMatrix([], state.gridcolumns, emptyChar);\n\n\tlet i,j;\n\n\t// Lets start PRELIMINARY CALCULATIONS!\n\n\t/*\n\t1. Calculate the columns width matrix.\n\t   We will take into account the feature position, feature size and fragmentation value.\n\t   The fragmentation value is interpreted in it's bit format, where 1 means a \"cut\".\n\t   The fragmentation value represents the fragmentation of the remaining gridcolumns after the feature size was deducted.\n\t */\n\n\tlet widthIdx = 1;\n\t// First, mark the feature.\n\tfor (i=state.featureposition; i < state.featureposition + state.featuresize; i++) {\n\t\twidthMatrix[i] = widthIdx;\n\t}\n\n\t// Next, go from left to right in the columns width matrix, and fill each columns with the same unique number,\n\t// Taking into account the fragmentation.\n\t// And remember the positions we are int the virtual matrix without the feature.\n\tlet frgIdx = 0;\n\twidthIdx++;\n\tfor (i=1; i <= state.gridcolumns; i++) {\n\t\tif (widthMatrix[i] === emptyChar) {\n\t\t\tfrgIdx++;\n\t\t\t// If the previous position has a different number than the current one, it is clear we should increment and write.\n\t\t\tif (widthMatrix[i-1] !== widthIdx) {\n\t\t\t\twidthIdx++;\n\t\t\t} else {\n\t\t\t\t// If the previous position has the same value as the current one, we need to determine\n\t\t\t\t// if the fragmentation bit pattern imposes a \"cut\".\n\t\t\t\tconst cutMarker = 1<<(state.gridcolumns-state.featuresize-frgIdx);\n\t\t\t\t// If there is a 1 at this position, make a cut aka increase the number.\n\t\t\t\tif ((cutMarker & state.fragmentation) === cutMarker) {\n\t\t\t\t\twidthIdx++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twidthMatrix[i] = widthIdx;\n\t\t}\n\t}\n\n\tdebug ? console.log( \"The width matrix: \".padEnd(45,' ') + widthMatrix) : false;\n\n\t/*\n\t2. Calculate the image weight matrix.\n\t   We will spread the image weight range left-to-right. Each column will consume the range according to its width.\n\t   Even it is a bidimensional matrix, for now we will only generate one row and copy it.\n   */\n\tfor (i=1; i <= state.gridcolumns; i++) {\n\t\t// Determine the other end of the current column.\n\t\tlet end=i;\n\t\twhile (widthMatrix[end+1] === widthMatrix[i]) {\n\t\t\tend++;\n\t\t}\n\n\t\t// Now calculate.\n\t\tif (i === 1) {\n\t\t\timageWeightMatrix[1][i] = state.imageweightleft;\n\t\t} else if (end === state.gridcolumns) {\n\t\t\timageWeightMatrix[1][i] = state.imageweightright;\n\t\t} else {\n\t\t\timageWeightMatrix[1][i] = Math.round(state.imageweightleft - ((state.imageweightleft - state.imageweightright) * (i + end - 1) / (2 * state.gridcolumns)));\n\t\t}\n\n\t\t// Fill the entire column with the same meta-details value.\n\t\tfor (j=i; j <= end; j++) {\n\t\t\timageWeightMatrix[1][j] = imageWeightMatrix[1][i];\n\t\t}\n\t\ti=end;\n\t}\n\t// Copy the first row to all of the rest.\n\tfor (i=2; i <= state.gridrows; i++) {\n\t\timageWeightMatrix[i] = imageWeightMatrix[1].slice(); // .slice() creates a copy of the array, not reference.\n\t}\n\n\tdebug ? console.log( \"The image weight matrix: \".padEnd(45,' ') + imageWeightMatrix[1]) : false;\n\n\t/*\n\t3. Calculate the meta-details matrix.\n\t   We will spread the meta-details range left-to-right. Each column will consume the range according to its width.\n\t   Even it is a bidimensional matrix, for now we will only generate one row and copy it.\n\t */\n\tfor (i=1; i <= state.gridcolumns; i++) {\n\t\t// Determine the other end of the current column.\n\t\tlet end=i;\n\t\twhile (widthMatrix[end+1] === widthMatrix[i]) {\n\t\t\tend++;\n\t\t}\n\n\t\t// Now calculate.\n\t\tif (i === 1) {\n\t\t\tmetaDetailsMatrix[1][i] = state.metadetailsleft;\n\t\t} else if (end === state.gridcolumns) {\n\t\t\tmetaDetailsMatrix[1][i] = state.metadetailsright;\n\t\t} else {\n\t\t\tmetaDetailsMatrix[1][i] = state.metadetailsleft - ((state.metadetailsleft - state.metadetailsright) * (i + end - 1) / (2 * state.gridcolumns));\n\n\t\t\t// If we are instructed to balance MD with IW, we will multiply the MD value with the \"distance\" of the IW value from the \"center\" of the IW range.\n\t\t\tif (state.balancemdandiw && 0 !== state.imageweightleft - state.imageweightright) {\n\t\t\t\tmetaDetailsMatrix[1][i] = metaDetailsMatrix[1][i] * (Math.abs(state.imageweightleft - state.imageweightright) / 2 / imageWeightMatrix[1][i]);\n\t\t\t}\n\n\t\t\tmetaDetailsMatrix[1][i] = Math.round( metaDetailsMatrix[1][i] );\n\t\t}\n\n\t\t// Fill the entire column with the same meta-details value.\n\t\tfor (j=i; j <= end; j++) {\n\t\t\tmetaDetailsMatrix[1][j] = metaDetailsMatrix[1][i];\n\t\t}\n\t\ti=end;\n\t}\n\t// Copy the first row to all of the rest.\n\tfor (i=2; i <= state.gridrows; i++) {\n\t\tmetaDetailsMatrix[i] = metaDetailsMatrix[1].slice(); // .slice() creates a copy of the array, not reference.\n\t}\n\n\tdebug ? console.log( \"The meta-details matrix: \".padEnd(45,' ') + metaDetailsMatrix[1]) : false;\n\n\t/*\n\t4. Handle the boost feature emphasis.\n\t   We will assign the maximum meta-details and image weight value to the feature, and assign its current value to the column holding the maximum values.\n\t*/\n\tif (state.boostfeature && state.featuresize > 0) {\n\t\t// Find column with maximum meta-details value, if the feature isn't already at the max.\n\t\tlet maxMetaDetailsPos = 1,\n\t\t\tmaxImageWeightPos = 1;\n\t\tfor (i = 1; i <= state.gridcolumns; i++) {\n\t\t\tif (metaDetailsMatrix[1][i] > metaDetailsMatrix[1][maxMetaDetailsPos]) {\n\t\t\t\tmaxMetaDetailsPos = i;\n\t\t\t}\n\n\t\t\tif (imageWeightMatrix[1][i] > imageWeightMatrix[1][maxImageWeightPos]) {\n\t\t\t\tmaxImageWeightPos = i;\n\t\t\t}\n\t\t}\n\n\t\tif (maxMetaDetailsPos !== state.featureposition) {\n\t\t\t// We have something to switch.\n\t\t\tlet featureValue = metaDetailsMatrix[1][state.featureposition];\n\t\t\tlet maxValue = metaDetailsMatrix[1][maxMetaDetailsPos];\n\n\t\t\t// Go and fill each column with the switched values.\n\t\t\ti = maxMetaDetailsPos;\n\t\t\twhile (widthMatrix[i] === widthMatrix[maxMetaDetailsPos]) {\n\t\t\t\tmetaDetailsMatrix[1][i] = featureValue;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti = state.featureposition;\n\t\t\twhile (widthMatrix[i] === widthMatrix[state.featureposition]) {\n\t\t\t\tmetaDetailsMatrix[1][i] = maxValue;\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// Copy the first row to all of the rest.\n\t\t\tfor (i=2; i <= state.gridrows; i++) {\n\t\t\t\tmetaDetailsMatrix[i] = metaDetailsMatrix[1].slice(); // .slice() creates a copy of the array, not reference.\n\t\t\t}\n\n\t\t\tdebug ? console.log( \"The boosted feature meta-details matrix: \".padEnd(45,' ') + metaDetailsMatrix[1]) : false;\n\t\t}\n\n\t\tif (maxImageWeightPos !== state.featureposition) {\n\t\t\t// We have something to switch.\n\t\t\tlet featureValue = imageWeightMatrix[1][state.featureposition];\n\t\t\tlet maxValue = imageWeightMatrix[1][maxImageWeightPos];\n\n\t\t\t// Go and fill each column with the switched values.\n\t\t\ti = maxImageWeightPos;\n\t\t\twhile (widthMatrix[i] === widthMatrix[maxImageWeightPos]) {\n\t\t\t\timageWeightMatrix[1][i] = featureValue;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti = state.featureposition;\n\t\t\twhile (widthMatrix[i] === widthMatrix[state.featureposition]) {\n\t\t\t\timageWeightMatrix[1][i] = maxValue;\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// Copy the first row to all of the rest.\n\t\t\tfor (i=2; i <= state.gridrows; i++) {\n\t\t\t\timageWeightMatrix[i] = imageWeightMatrix[1].slice(); // .slice() creates a copy of the array, not reference.\n\t\t\t}\n\n\t\t\tdebug ? console.log( \"The boosted feature image weight matrix: \".padEnd(45,' ') + imageWeightMatrix[1]) : false;\n\t\t}\n\t}\n\n\t/*\n\t5. Determine the vertical fragment size matrix.\n\t   The fragment size will range in the number of grid rows and 1.\n\t*/\n\t// First determine the max meta-details and image weight value.\n\tlet maxMetaDetailsValue = metaDetailsMatrix[1][1],\n\t\tmaxImageWeightValue = imageWeightMatrix[1][1];\n\tfor (i = 1; i <= state.gridcolumns; i++) {\n\t\tif (metaDetailsMatrix[1][i] > maxMetaDetailsValue) {\n\t\t\tmaxMetaDetailsValue = metaDetailsMatrix[1][i];\n\t\t}\n\n\t\tif (imageWeightMatrix[1][i] > maxImageWeightValue) {\n\t\t\tmaxImageWeightValue = imageWeightMatrix[1][i];\n\t\t}\n\t}\n\n\t// For the purpose of these calculations, maxMetaDetailsValue and maxImageWeightValue can't be zero.\n\tif (maxImageWeightValue < 1) {\n\t\tmaxImageWeightValue = 1;\n\t}\n\tif (maxMetaDetailsValue < 1) {\n\t\tmaxMetaDetailsValue = 1;\n\t}\n\n\tfor (i=1; i <= state.gridcolumns; i++) {\n\t\t// Determine the other end of the current column.\n\t\tlet end=i;\n\t\twhile (widthMatrix[end+1] === widthMatrix[i]) {\n\t\t\tend++;\n\t\t}\n\n\t\t// Now calculate.\n\t\tverticalFragmentSizeMatrix[i] = Math.round((((metaDetailsMatrix[1][i] / maxMetaDetailsValue) + (imageWeightMatrix[1][i] / maxImageWeightValue)) / 2) * state.gridrows);\n\t\t// The vertical fragment size can't be more than 3 times the column width (a really tall post).\n\t\tif (verticalFragmentSizeMatrix[i] > (end - i + 1) * 3) {\n\t\t\tverticalFragmentSizeMatrix[i] = (end - i + 1) * 3;\n\t\t}\n\t\t// Also the vertical fragment size can't be less than 1.\n\t\tif (verticalFragmentSizeMatrix[i] < 1) {\n\t\t\tverticalFragmentSizeMatrix[i] = 1;\n\t\t}\n\n\t\t// If the sub feature option is active, and we have a single column for the feature, reduce the vertical fragmentation with 25%.\n\t\tif (state.subfeature && i === state.featureposition && state.featuresize > 0 && verticalFragmentSizeMatrix[i] === state.gridrows) {\n\t\t\tverticalFragmentSizeMatrix[i] = Math.floor(verticalFragmentSizeMatrix[i] * 0.75);\n\t\t}\n\n\t\t// Safety measures.\n\t\tif (verticalFragmentSizeMatrix[i] < 1) {\n\t\t\tverticalFragmentSizeMatrix[i] = 1;\n\t\t} else if (verticalFragmentSizeMatrix[i] > state.gridrows) {\n\t\t\tverticalFragmentSizeMatrix[i] = state.gridrows;\n\t\t}\n\n\t\t// Fill the entire column with the same fragment size.\n\t\tfor (j = i; j <= end; j++) {\n\t\t\tverticalFragmentSizeMatrix[j] = verticalFragmentSizeMatrix[i];\n\t\t}\n\t\ti=end;\n\t}\n\n\tdebug ? console.log( \"The vertical fragment size matrix: \".padEnd(45,' ') + verticalFragmentSizeMatrix) : false;\n\n\t/*\n\t6. Determine the nth bidimensional matrix.\n\t   Each grid cell will be filled with the nth post that cell belongs to. From this matrix we can determine the post grid coordinates,\n\t   its aspect ratio, area, etc.\n\t*/\n\n\t// We start with the first post in the list.\n\tlet currentNth = 1;\n\n\t// Start with the feature column.\n\tif (state.featuresize > 0) {\n\t\ti = 1;\n\t\twhile (i <= verticalFragmentSizeMatrix[state.featureposition]) {\n\t\t\tj = state.featureposition;\n\t\t\tdo {\n\t\t\t\tnthMatrix[i][j] = currentNth;\n\t\t\t\tj++;\n\t\t\t} while (widthMatrix[state.featureposition] === widthMatrix[j])\n\n\t\t\ti++;\n\t\t}\n\n\t\tcurrentNth++;\n\n\t\tif (i <= state.gridrows) {\n\t\t\t// We have room under the feature for a secondary feature post.\n\t\t\t// We will reduce the meta-details and image weight by 33% that of the main feature post.\n\t\t\twhile (i <= state.gridrows) {\n\t\t\t\tj = state.featureposition;\n\t\t\t\tdo {\n\t\t\t\t\tnthMatrix[i][j] = currentNth;\n\n\t\t\t\t\t// Adjust the meta-details and image weight.\n\t\t\t\t\tmetaDetailsMatrix[i][j] = Math.round(metaDetailsMatrix[i][j] * 0.66);\n\t\t\t\t\timageWeightMatrix[i][j] = Math.round(imageWeightMatrix[i][j] * 0.66);\n\n\t\t\t\t\tj++;\n\t\t\t\t} while (widthMatrix[state.featureposition] === widthMatrix[j])\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tcurrentNth++;\n\t\t}\n\t}\n\n\t// Now start from the left top corner and go through each column, left to right.\n\tlet currentColumnStartCol = 1;\n\tlet currentPostStartRow;\n\twhile (currentColumnStartCol <= state.gridcolumns) {\n\t\tif (nthMatrix[1][currentColumnStartCol] !== emptyChar) {\n\t\t\tcurrentColumnStartCol++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Fill the current column with posts.\n\t\tcurrentPostStartRow = 1;\n\t\twhile (currentPostStartRow <= state.gridrows) {\n\t\t\ti = currentPostStartRow;\n\t\t\twhile (i <= currentPostStartRow + verticalFragmentSizeMatrix[currentColumnStartCol] - 1 && i <= state.gridrows) {\n\t\t\t\tj = currentColumnStartCol;\n\t\t\t\tdo {\n\t\t\t\t\tnthMatrix[i][j] = currentNth;\n\t\t\t\t\tj++;\n\t\t\t\t} while (widthMatrix[currentColumnStartCol] === widthMatrix[j])\n\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcurrentNth++;\n\t\t\tcurrentPostStartRow = i;\n\t\t}\n\t}\n\n\tif (debug) {\n\t\tconsole.log(\"\\nThe nth matrix: \".padEnd(42, ' ') + '0 - ' + nthMatrix[0].join(' '));\n\t\tfor (i = 1; i < nthMatrix.length; i++) {\n\t\t\tconsole.log(' '.padEnd(41, ' ') + i + ' - ' + nthMatrix[i].join(' '));\n\t\t}\n\t}\n\n\t/*\n\t7. Handle the hierarchy crossing.\n\t   We will not cross into the feature post. We will only cross left to right, only \"over\" a post with a lower nth count.\n\t   We will only cross if the left post matches in height a post or more on the right.\n\t   The rate of consumption is related to the nth, area, IW and MD of the post being expanded and the post(s) being replaced.\n\t   Also, crossing at the top of the layout is more expensive than crossing at a lower row.\n\t*/\n\n\t// We start with the first post in the list.\n\tlet maxNth = currentNth;\n\tlet hierachyCrossingStrenth = state.hierarchycrossing;\n\n\tcurrentNth = 1;\n\n\twhile (hierachyCrossingStrenth > 0 && currentNth <= maxNth) {\n\t\tlet currentPostDetails = getNthPostDetails(currentNth, nthMatrix, metaDetailsMatrix, imageWeightMatrix);\n\t\tif (false === currentPostDetails) {\n\t\t\tcurrentNth++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If the current post is all the way to the right edge, stop.\n\t\tif (currentPostDetails.endGridColumn === state.gridcolumns) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// Now identify its right-side neighbors.\n\t\tlet topNeighborPostDetails = getNthPostDetails(nthMatrix[currentPostDetails.startGridRow][currentPostDetails.endGridColumn+1], nthMatrix, metaDetailsMatrix, imageWeightMatrix);\n\t\tlet bottomNeighborPostDetails = getNthPostDetails(nthMatrix[currentPostDetails.endGridRow][currentPostDetails.endGridColumn+1], nthMatrix, metaDetailsMatrix, imageWeightMatrix);\n\t\t// If the neighbors don't match the height in rows of the current post, skip this post from crossing.\n\t\tif (topNeighborPostDetails.startGridRow !== currentPostDetails.startGridRow || bottomNeighborPostDetails.endGridRow !== currentPostDetails.endGridRow) {\n\t\t\tcurrentNth++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Calculate the score of the to-be replaced post(s).\n\t\t// Each post's score correlated to its nth value. The lower the nth value the bigger the score boost.\n\t\tlet replacedPostScore = (maxNth / topNeighborPostDetails.nth) * (topNeighborPostDetails.area + topNeighborPostDetails.imageWeight + topNeighborPostDetails.metaDetails);\n\t\tif (bottomNeighborPostDetails.nth !== topNeighborPostDetails.nth) {\n\t\t\tlet counter = 1;\n\t\t\tfor (i = topNeighborPostDetails.nth+1; i <= bottomNeighborPostDetails.nth; i++) {\n\t\t\t\tconst postDetails = getNthPostDetails(i, nthMatrix, metaDetailsMatrix, imageWeightMatrix);\n\t\t\t\tif (false === postDetails) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tcounter++;\n\t\t\t\t// It is increasingly \"harder\" to replace multiple posts.\n\t\t\t\treplacedPostScore += (maxNth / postDetails.nth) * (postDetails.area + postDetails.imageWeight + postDetails.metaDetails * counter) * counter;\n\t\t\t}\n\t\t}\n\n\t\t// If the to-be replaced post(s) score is larger than the remaining hierarchy crossing strength, nothing to do.\n\t\tif (hierachyCrossingStrenth < replacedPostScore) {\n\t\t\tcurrentNth++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet currentPostScore = (maxNth / currentPostDetails.nth) * (currentPostDetails.area + currentPostDetails.imageWeight + currentPostDetails.metaDetails) * Math.pow(2*hierachyCrossingStrenth/50, 3);\n\t\t// If the current post score is bigger than the to-be replaced post(s) score, it's a go.\n\t\tif (currentPostScore > replacedPostScore) {\n\t\t\t// Expand the current post over the replaced ones.\n\t\t\tfor (i = topNeighborPostDetails.startGridRow; i <= bottomNeighborPostDetails.endGridRow; i++) {\n\t\t\t\tfor (j = topNeighborPostDetails.startGridColumn; j <= topNeighborPostDetails.endGridColumn; j++) {\n\t\t\t\t\tnthMatrix[i][j] = currentNth;\n\n\t\t\t\t\t// Also replace the image weight and meta-details.\n\t\t\t\t\timageWeightMatrix[i][j] = currentPostDetails.imageWeight;\n\t\t\t\t\tmetaDetailsMatrix[i][j] = currentPostDetails.metaDetails;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Decrease the crossing strength.\n\t\t\thierachyCrossingStrenth -= replacedPostScore;\n\n\t\t\t// We now have a gap in the post list. We need to renumber the posts after the replaced ones and adjust the maxnth.\n\t\t\t// The image weight and meta-details remain unchanged.\n\t\t\t// Work with the new maxNth.\n\t\t\tmaxNth = renumberNthMatrix(nthMatrix);\n\t\t}\n\n\t\tcurrentNth++;\n\t}\n\n\t// Transpose all matrices if flipcolssrows attribute is set to true\n\tconst finalNthMatrix = ! state.flipcolsrows ? nthMatrix : transposeMatrix( nthMatrix );\n\tconst finalMetaMatrix = ! state.flipcolsrows ? metaDetailsMatrix : transposeMatrix( metaDetailsMatrix );\n\tconst finalImageMatrix = ! state.flipcolsrows ? imageWeightMatrix : transposeMatrix( imageWeightMatrix );\n\n\t/*\n\t8. Finally, generate the posts list.\n\t*/\n\tconst areaColumns = getGroupedPostAreas( state, finalNthMatrix, finalMetaMatrix, finalImageMatrix );;\n\tmoveLargestColumnToStart( areaColumns );\n\n\treturn areaColumns;\n};\n\nconst moveLargestColumnToStart = ( areaColumns ) => {\n\tconst firstRowColumns = areaColumns.filter( column => column.row === 1 )\n\t                                   .sort( ( col1, col2 ) => col2.width - col1.width );\n\tconst largestColumnIndex = areaColumns.findIndex( column => column === firstRowColumns[0] );\n\tareaColumns.splice(0, 0, areaColumns.splice(largestColumnIndex, 1)[0]);\n\n\treturn areaColumns;\n};\n\nconst logMatrix = ( matrix ) =>{\n\tfor (let i = 0; i < matrix.length; i++) {\n\t\tconsole.log(' '.padEnd(41, ' ') + i + ' - ' + matrix[i].join(' '));\n\t}\n};\n\nfunction getGroupedPostAreas( state, nthMatrix, metaDetailsMatrix, imageWeightMatrix ) {\n\tlet areasArray = getAreasArray( nthMatrix, metaDetailsMatrix, imageWeightMatrix );\n\n\tmergeSimilarAreas( nthMatrix, metaDetailsMatrix, imageWeightMatrix, areasArray, state );\n\tareasArray = normalizeAreas( nthMatrix, areasArray );\n\tareasArray = areasArray.map( area => {\n\t\treturn {\n\t\t\tinitialPostsCount: area.postsCount,\n\t\t\t...area\n\t\t}\n\t} );\n\n\tlet columns = areasArray.map( area => {\n\t\treturn {\n\t\t\trow: area.row,\n\t\t\tcol: area.col,\n\t\t\twidth: area.width,\n\t\t\theight: area.height,\n\t\t\tareas: [ area ]\n\t\t}\n\t} );\n\n\t// loop through columns\n\tcolumns.forEach( currentColumn => {\n\t\t// loop through \"current\" column's areas\n\t\tcurrentColumn.areas.forEach( ( currentArea, i ) => {\n\t\t\t// loop again through columns except the current column\n\t\t\tcolumns.filter( column => column !== currentColumn ).forEach( compareColumn => {\n\t\t\t\t// loop through the \"compare\" column's areas\n\t\t\t\tcompareColumn.areas.forEach( ( compareArea, j ) => {\n\t\t\t\t\t// check if the areas have the same column and the same width\n\t\t\t\t\tif ( ! compareArea.merged &&\n\t\t\t\t\t     currentArea.col === compareArea.col &&\n\t\t\t\t\t     currentArea.width === compareArea.width &&\n\t\t\t\t\t     // and if the two areas are continuous\n\t\t\t\t\t     ( currentArea.row + currentArea.height === compareArea.row || currentArea.row === compareArea.row + compareArea.height ) ) {\n\t\t\t\t\t\t// if so, move the compared area to the current column's areas array and update the column height\n\t\t\t\t\t\tcompareArea.merged = true;\n\t\t\t\t\t\tcurrentColumn.areas.push( compareArea );\n\t\t\t\t\t\tcurrentColumn.height += compareArea.height;\n\t\t\t\t\t\tcompareColumn.areas.splice( j, 1 );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} )\n\t} );\n\n\treturn columns.filter( randomColumn => randomColumn.areas.length > 0 );\n}\n\nfunction getNthValues( nthMatrix ) {\n\tlet values = [];\n\tlet value;\n\n\tfor ( let i = 1; i < nthMatrix.length - 1; i ++ ) {\n\t\tfor ( let j = 1; j < nthMatrix[i].length - 1; j ++ ) {\n\t\t\tvalue = nthMatrix[i][j];\n\t\t\tif ( values.indexOf( value ) === -1 ) {\n\t\t\t\tvalues.push( value );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn values;\n}\n\nfunction normalizeAreas( nthMatrix, areasArray ) {\n\tconst values = getNthValues( nthMatrix );\n\tvalues.sort( ( a, b ) => {\n\t\treturn a - b;\n\t} );\n\n\tfor ( let i = 0; i < values.length; i ++ ) {\n\t\tif ( i + 1 !== values[i] ) {\n\t\t\treplaceNth( values[i], i + 1, nthMatrix );\n\t\t}\n\t}\n\n\treturn values.map( ( nth, index ) => {\n\t\tconst area = areasArray.find( area => area.nth === nth );\n\t\tarea.nth = index + 1;\n\t\treturn area;\n\t} );\n}\n\nfunction replaceNth( nth1, nth2, nthMatrix ) {\n\tfor ( let i = 1; i < nthMatrix.length - 1; i ++ ) {\n\t\tfor ( let j = 1; j < nthMatrix[i].length - 1; j ++ ) {\n\t\t\tif ( nthMatrix[i][j] === nth1 ) {\n\t\t\t\tnthMatrix[i][j] = nth2;\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst mergeSimilarAreas = ( nthMatrix, metaDetailsMatrix, imageWeightMatrix, areasArray, state ) => {\n\tlet currentPostDetails;\n\n\tfor ( let currentNth = 1; currentNth <= getMaxNth( nthMatrix ); currentNth++  ) {\n\t\tcurrentPostDetails = getNthPostDetails( currentNth, nthMatrix, metaDetailsMatrix, imageWeightMatrix );\n\t\tif ( currentPostDetails ) {\n\t\t\tmergeAreaNeighbours( currentPostDetails.startGridRow, currentPostDetails.startGridColumn, nthMatrix, metaDetailsMatrix, imageWeightMatrix, areasArray, state );\n\t\t}\n\t}\n};\n\nconst mergeAreaNeighbours = ( row, col, nthMatrix, metaDetailsMatrix, imageWeightMatrix, areasArray, state ) => {\n\tlet nth = nthMatrix[row][col];\n\tlet width = getAreaWidth( nth, nthMatrix );\n\tlet height = getAreaHeight( nth, nthMatrix );\n\tlet initialWidth = width;\n\tlet initialHeight = height;\n\tlet currentAreaIndex = -1;\n\n\tif ( Array.isArray( areasArray ) ) {\n\t\tcurrentAreaIndex = areasArray.findIndex( area => {\n\t\t\treturn area.nth === nthMatrix[row][col];\n\t\t} )\n\t}\n\n\t// Featured area should not be merged\n\tif ( nth === 1 ) {\n\t\treturn;\n\t}\n\n\tlet nextRow,\n\t\tnextCol,\n\t\tnextWidth,\n\t\tnextHeight,\n\t\tnextNth,\n\t\tnextNthStart,\n\t\tsearching = true,\n\t\tmergeable = false;\n\n\twhile ( searching ) {\n\t\tnextNth = nthMatrix[row + height][col];\n\t\tnextNthStart = getFirstOccurence( nextNth, nthMatrix );\n\t\tnextRow = nextNthStart.row;\n\t\tnextCol = nextNthStart.col;\n\n\t\tnextWidth = getAreaWidth( nextNth, nthMatrix );\n\t\tnextHeight = getAreaHeight( nextNth, nthMatrix );\n\n\t\tif ( width === nextWidth &&\n\t\t     col === nextCol &&\n\t\t     Math.abs( initialHeight - nextHeight ) <= 1 &&\n\t\t     Math.abs( metaDetailsMatrix[row][col] - metaDetailsMatrix[nextRow][col] ) <= 1 &&\n\t\t     Math.abs( imageWeightMatrix[row][col] - imageWeightMatrix[nextRow][col] ) <= 1 ) {\n\t\t\theight = height + nextHeight;\n\n\t\t\tmergeable = true;\n\n\t\t\tif ( currentAreaIndex > -1 ) {\n\t\t\t\tareasArray[currentAreaIndex].postsCount += 1;\n\t\t\t\tareasArray[currentAreaIndex].height = height;\n\t\t\t}\n\t\t} else {\n\t\t\tsearching = false;\n\t\t}\n\t}\n\n\tsearching = ! mergeable;\n\n\twhile ( searching && ! state.flipcolsrows ) {\n\t\tnextNth = nthMatrix[row][col + width];\n\t\tnextNthStart = getFirstOccurence( nextNth, nthMatrix );\n\t\tnextRow = nextNthStart.row;\n\t\tnextCol = nextNthStart.col;\n\n\t\tnextWidth = getAreaWidth( nextNth, nthMatrix );\n\t\tnextHeight = getAreaHeight( nextNth, nthMatrix );\n\n\t\tif ( height === nextHeight &&\n\t\t     row === nextRow &&\n\t\t     Math.abs( initialWidth - nextWidth ) <= 1 &&\n\t\t     Math.abs( metaDetailsMatrix[row][col] - metaDetailsMatrix[row][nextCol] ) <= 1 &&\n\t\t     Math.abs( imageWeightMatrix[row][col] - imageWeightMatrix[row][nextCol] ) <= 1 ) {\n\t\t\twidth = width + nextWidth;\n\n\t\t\tmergeable = true;\n\n\t\t\tif ( currentAreaIndex > -1 ) {\n\t\t\t\tareasArray[currentAreaIndex].postsCount += 1;\n\t\t\t\tareasArray[currentAreaIndex].width = width;\n\t\t\t}\n\t\t} else {\n\t\t\tsearching = false;\n\t\t}\n\t}\n\n\tfillArea( nthMatrix, row, col, width, height );\n};\n\nconst fillArea = ( nthMatrix, row, col, width, height ) => {\n\tfor (let i = row; i < row + height; i++) {\n\t\tfor (let j = col; j < col + width; j++) {\n\t\t\tnthMatrix[i][j] = nthMatrix[row][col];\n\t\t}\n\t}\n};\n\nconst getFirstOccurence = ( nth, nthMatrix ) => {\n\tfor ( let i = 0; i < nthMatrix.length; i++ ) {\n\t\tfor ( let j = 0; j < nthMatrix[i].length; j++ ) {\n\t\t\tif ( nthMatrix[i][j] === nth ) {\n\t\t\t\treturn {\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: j,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {};\n};\n\nconst getAreaWidth = ( nth, nthMatrix ) => {\n\tconst { row, col } = getFirstOccurence( nth, nthMatrix );\n\tlet width = 1;\n\n\twhile ( nth === nthMatrix[row][col + width] ) {\n\t\twidth = width + 1;\n\t}\n\n\treturn width;\n};\n\n\n\nconst getAreaHeight = ( nth, nthMatrix ) => {\n\tconst { row, col } = getFirstOccurence( nth, nthMatrix );\n\tlet height = 1;\n\n\twhile ( \"undefined\" !== typeof nthMatrix[row + height] && nth === nthMatrix[row + height][col] ) {\n\t\theight = height + 1;\n\t}\n\n\treturn height;\n};\n\nconst renumberNthMatrix = (nthMatrix) => {\n\tlet newNth = 1;\n\tlet postDetails;\n\n\tfor (let nth = 1; nth <= getMaxNth(nthMatrix); nth++) {\n\t\t// If we can't find a nth post, it means it was removed and we need to adjust.\n\t\tpostDetails = getNthPostDetails(nth, nthMatrix);\n\t\tif (false === postDetails) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (postDetails.nth > newNth) {\n\t\t\t// Change the current post's nth.\n\t\t\tfor (let i = postDetails.startGridRow; i <= postDetails.endGridRow; i++) {\n\t\t\t\tfor (let j = postDetails.startGridColumn; j <= postDetails.endGridColumn; j++) {\n\t\t\t\t\tnthMatrix[i][j] = newNth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnewNth++;\n\t}\n\n\t// Return the maxNth.\n\treturn newNth - 1;\n};\n\nconst getMaxNth = (nthMatrix) => {\n\tlet maxNth = 0;\n\tfor (let i = 1; i < nthMatrix.length; i++) {\n\t\tfor (let j = 1; j < nthMatrix[i].length; j++) {\n\t\t\tif (nthMatrix[i][j] > maxNth) {\n\t\t\t\tmaxNth = nthMatrix[i][j];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn maxNth;\n};\n\nconst getAreasArray = ( nthMatrix, metaDetailsMatrix, imageWeightMatrix ) => {\n\n\tlet currentPostDetails;\n\tlet areasArray = [];\n\n\tfor ( let currentNth = 1; currentNth <= getMaxNth( nthMatrix ); currentNth++  ) {\n\t\tcurrentPostDetails = getNthPostDetails( currentNth, nthMatrix, metaDetailsMatrix, imageWeightMatrix );\n\n\t\tif ( currentPostDetails ) {\n\n\t\t\tareasArray.push( {\n\t\t\t\tnth: currentPostDetails.nth,\n\t\t\t\tcol: currentPostDetails.startGridColumn,\n\t\t\t\trow: currentPostDetails.startGridRow,\n\t\t\t\twidth: currentPostDetails.endGridColumn - currentPostDetails.startGridColumn + 1,\n\t\t\t\theight: currentPostDetails.endGridRow - currentPostDetails.startGridRow + 1,\n\t\t\t\tmetaDetails: currentPostDetails.metaDetails,\n\t\t\t\timageWeight: currentPostDetails.imageWeight,\n\t\t\t\tpostsCount: 1,\n\t\t\t} )\n\t\t}\n\t}\n\n\treturn areasArray;\n};\n\nconst getNthPostDetails = (nth, nthMatrix, metaDetailsMatrix = false, imageWeightMatrix = false) => {\n\tlet postDetails = false;\n\n\t// Go through the nthMatrix and search for the currentNth value.\n\tfor (let i = 1; i < nthMatrix.length; i++) {\n\t\tfor (let j = 1; j < nthMatrix[i].length; j++) {\n\t\t\tif (nthMatrix[i][j] === nth) {\n\t\t\t\t// Found the left top corner.\n\t\t\t\tpostDetails = {\n\t\t\t\t\t'nth': nth,\n\t\t\t\t\t'startGridColumn': j,\n\t\t\t\t\t'startGridRow': i,\n\t\t\t\t\t'endGridColumn': j,\n\t\t\t\t\t'endGridRow': i,\n\t\t\t\t\t'metaDetails': metaDetailsMatrix ? metaDetailsMatrix[i][j] : false,\n\t\t\t\t\t'imageWeight': imageWeightMatrix ? imageWeightMatrix[i][j] :false,\n\t\t\t\t\t'area': 1,\n\t\t\t\t};\n\n\t\t\t\t// Find the right bottom corner.\n\t\t\t\twhile (j < nthMatrix[i].length && nthMatrix[i][j] === nthMatrix[i][j+1]) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tpostDetails.endGridColumn = j;\n\t\t\t\twhile (i < nthMatrix.length && nthMatrix[i][j] === nthMatrix[i+1][j]) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tpostDetails.endGridRow = i;\n\n\t\t\t\t// Calculate the area.\n\t\t\t\tpostDetails.area = (postDetails.endGridRow - postDetails.startGridRow + 1) * (postDetails.endGridColumn - postDetails.startGridColumn + 1);\n\n\t\t\t\treturn postDetails;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn postDetails;\n};\n\nconst initUnidimensionalMatrix = (matrix, length, character = \"X\") => {\n\t// The 0 index will be filled with a different character for easier logic.\n\tmatrix.push(\"/\");\n\n\t// Go to equal the length, since the 0 index will be ignored.\n\t// Fill with \"null\" entries with the provided character.\n\tfor (let i = 1; i <= length; i++) {\n\t\tmatrix.push(character);\n\t}\n\n\t// Put an extra entry for easier logic.\n\tmatrix.push(\"/\");\n\n\treturn matrix;\n};\n\nconst initBidimensionalMatrix = (matrix, width, height, nullChar) => {\n\t// Put in a guard row, at index 0.\n\tmatrix.push(initUnidimensionalMatrix([], width, \"/\"));\n\n\t// Go to equal the width, since the 0 index will be ignored.\n\tfor (let i = 0; i < height; i++) {\n\t\tmatrix.push(initUnidimensionalMatrix([], width, nullChar));\n\t}\n\t// Put in an extra guard row.\n\tmatrix.push(initUnidimensionalMatrix([], width, \"/\"));\n\n\treturn matrix;\n};\n","import classnames from \"classnames\";\n\nimport { getCardMediaPaddingTop } from \"@novablocks/utils\";\nimport { Card } from \"@novablocks/components\";\nimport { PostCard } from \"@novablocks/block-editor\";\n\nimport AreaDebug from \"./area-debug\";\nimport { applyLayoutEngine } from \"./layout-engine\";\n\nimport {\n\tCollectionPreview,\n\tCollectionHeader,\n} from './collection'\n\nimport {\n\tgetParametricLayoutAreaClassName,\n\tgetGridStyle,\n\tredistributeCardsInAreas,\n\tisLandscape,\n} from \"./utils\";\n\nexport const ClassicLayoutPreview = ( props ) => {\n\n\tconst {\n\t\tattributes,\n\t\tposts,\n\t} = props;\n\n\tconst {\n\t\tcolumns,\n\t\tisLandscape,\n\t\tshowMedia,\n\t\tshowMeta,\n\t\tshowTitle,\n\t\tshowDescription,\n\t\tshowButtons,\n\t\tpostsToShow,\n\t} = attributes;\n\n\tconst style = {\n\t\t'--columns': columns\n\t};\n\n\tconst cardProps = {\n\t\tplaceholder: true,\n\t\thasFixedAspectRatio: true,\n\t\tisLandscape,\n\t\tshowMedia,\n\t\tshowMeta,\n\t\tshowTitle,\n\t\tshowContent: showDescription,\n\t\tshowButtons,\n\t};\n\n\treturn (\n\t\t<CollectionPreview hasAppender={ false } { ...props }>\n\t\t\t<div className=\"block-editor-inner-blocks\">\n\t\t\t\t<div className=\"block-editor-block-list__layout\" style={ style }>\n\t\t\t\t\t{\n\t\t\t\t\t\t!! posts && posts.map( ( post, idx ) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<PostCard key={ idx } post={ post } isLandscape={ isLandscape } attributes={ attributes } />\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\t! posts && Array.from( Array( postsToShow ).keys() ).map( ( obj, idx ) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Card key={ idx } { ...cardProps } />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CollectionPreview>\n\t);\n};\n\nexport const ParametricLayoutPreview = ( props ) => {\n\n\tconst {\n\t\tattributes,\n\t\tgetContent,\n\t\tcardsCount,\n\t} = props;\n\n\tconst {\n\t\ttoggleScale,\n\t\ttoggleMask,\n\n\t\tthumbnailAspectRatio,\n\t\timagePadding,\n\t\timageResizing,\n\n\t\theaderPosition,\n\t} = attributes;\n\n\tconst classname = classnames(\n\t\t`novablocks-grid`,\n\t\t{\n\t\t\t'novablocks-grid--scaled': toggleScale,\n\t\t\t'novablocks-grid--mask': toggleMask,\n\t\t}\n\t);\n\n\tlet areaColumns = applyLayoutEngine( attributes );\n\tlet addedCards = 0;\n\n\tredistributeCardsInAreas( areaColumns, cardsCount, attributes );\n\n\tconst style = {\n\t\t'--card-media-padding': imagePadding,\n\t\t'--card-media-padding-top': getCardMediaPaddingTop( thumbnailAspectRatio ),\n\t\t'--card-media-object-fit': imageResizing === 'cropped' ? 'cover' : 'scale-down',\n\t\t...getGridStyle( attributes ),\n\t};\n\n\treturn (\n\t\t<div className=\"wp-block-group__inner-container\">\n\t\t\t{ headerPosition === 0 && <CollectionHeader { ...props } /> }\n\t\t\t<div className=\"novablocks-collection__cards block-editor-block-list__block\">\n\t\t\t\t<div className=\"novablocks-collection__layout\">\n\t\t\t\t\t<div className={ classname } style={ style }>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!! areaColumns && areaColumns.map( areaColumn => {\n\t\t\t\t\t\t\t\tlet { areas, row, col, width, height } = areaColumn;\n\n\t\t\t\t\t\t\t\tconst areaColumnStyle = {\n\t\t\t\t\t\t\t\t\tgridColumnStart: col,\n\t\t\t\t\t\t\t\t\tgridColumnEnd: col + width,\n\t\t\t\t\t\t\t\t\tgridRowStart: row,\n\t\t\t\t\t\t\t\t\tgridRowEnd: row + height,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className={ `novablocks-grid__column` } style={ areaColumnStyle }>\n\t\t\t\t\t\t\t\t\t\t{ areas.map( area => {\n\t\t\t\t\t\t\t\t\t\t\taddedCards += area.postsCount;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={ getParametricLayoutAreaClassName( area, attributes ) }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AreaDebug area={ area } />\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ Array.from( Array( area.postsCount ).keys() ).map( i => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst landscape = isLandscape( area, attributes );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn getContent( addedCards - area.postsCount + i, attributes, landscape );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n","import classnames from \"classnames\";\n\nexport const getGridStyle = ( attributes ) => {\n\n\tconst { gridcolumns, gridrows } = getGridColumnsAndRows( attributes );\n\n\treturn {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: `repeat( ${ gridcolumns }, 1fr )`,\n\t\tgridTemplateRows: `repeat( ${ gridrows }, auto )`,\n\t};\n};\n\n// Sums optimal posts count value from each area\nexport const getPostsCount = ( areaColumns ) => {\n\treturn areaColumns.reduce( ( total, areaColumn ) => {\n\t\treturn total + areaColumn.areas.reduce( ( columnTotal, area ) => {\n\t\t\treturn columnTotal + area.postsCount;\n\t\t}, 0 );\n\t}, 0 );\n};\n\nexport const redistributeCardsInAreas = ( areaColumns, cardsCount, attributes ) => {\n\tlet totalSpots = getPostsCount( areaColumns );\n\tlet totalPosts = cardsCount;\n\tlet remainingPosts = totalPosts;\n\tlet totalRatio = 0;\n\n\tfor ( let i = 0; i < areaColumns.length; i++ ) {\n\t\tlet areaColumn = areaColumns[i];\n\t\tlet areaColumnSpotRatio = 0;\n\n\t\tfor ( let j = 0; j < areaColumn.areas.length; j ++ ) {\n\t\t\tlet area = areaColumn.areas[j];\n\t\t\t// we shouldn't fill the area with the featured card\n\t\t\tarea.spotRatio = getCardRatio( area, attributes );\n\t\t\tareaColumnSpotRatio += area.spotRatio;\n\t\t\ttotalRatio += area.spotRatio;\n\t\t}\n\n\t\tareaColumn.spotRatio = areaColumnSpotRatio;\n\t}\n\n\tlet extraPosts = totalPosts - totalSpots;\n\n\tif ( totalSpots === totalPosts ) {\n\t\treturn;\n\t}\n\n\tfor ( let i = 0; i < areaColumns.length; i++ ) {\n\t\tlet areaColumn = areaColumns[i];\n\t\tlet { areas } = areaColumn;\n\n\t\tfor ( let j = 0; j < areas.length; j++ ) {\n\t\t\tlet area = areas[j];\n\t\t\tlet areaExtraPosts = Math.round( extraPosts * area.spotRatio / totalRatio );\n\t\t\tarea.postsCount = Math.max( 0, area.postsCount + areaExtraPosts );\n\t\t\ttotalRatio -= area.spotRatio;\n\t\t\textraPosts -= areaExtraPosts;\n\n\t\t\tif ( remainingPosts <= 0 ) return;\n\t\t}\n\t}\n};\n\nexport const getOptimalHeaderPosition = areaColumns => {\n\tlet index = 1;\n\tlet positions = [0];\n\n\tfor ( let columnIndex = 0; columnIndex < areaColumns.length; columnIndex++ ) {\n\t\tconst areaColumn = areaColumns[columnIndex];\n\t\tconst { areas, row } = areaColumn;\n\n\t\tfor ( let areaIndex = 0; areaIndex < areas.length; areaIndex++ ) {\n\t\t\tconst area = areas[areaIndex];\n\n\t\t\tif ( row === 1 && areaIndex === 0 ) {\n\t\t\t\tpositions.push( index );\n\t\t\t}\n\n\t\t\tindex += area.postsCount;\n\t\t}\n\t}\n\n\treturn positions;\n};\n\nconst getCardRatio = ( area, attributes ) => {\n\tconst { gridcolumns } = getGridColumnsAndRows( attributes );\n\tconst { width, height, postsCount } = area;\n\tlet ratio = postsCount / height;\n\n\t// when the card is landscape and very small\n\t// we hide the content so the ratio should be bigger\n\tif ( isLandscape( area, attributes ) ) {\n\t\tratio *= 2;\n\t}\n\n\tratio *= gridcolumns / width;\n\n\treturn ratio;\n};\n\nexport const isLandscape = ( area, attributes ) => {\n\tconst { gridcolumns, gridrows } = getGridColumnsAndRows( attributes );\n\tconst { nth, width, height, initialPostsCount } = area;\n\n\tconst isLandscape = width * initialPostsCount / height > 1.33;\n\n\tif ( width / gridcolumns >= 0.5 ) {\n\t\treturn isLandscape || ( attributes.subfeature && nth === 2 );\n\t}\n\n\treturn isLandscape;\n};\n\nexport const getParametricLayoutAreaClassName = ( area, attributes ) => {\n\tconst { gridcolumns, gridrows } = getGridColumnsAndRows( attributes );\n\tconst { width, height } = area;\n\n\treturn classnames([\n\t\tgetAreaBaseClassname( area ),\n\t\tgetAreaClassnameByWidthRatio( width / gridcolumns ),\n\t\tgetAreaClassnameByHeightRatio( height / gridrows ),\n\t\tgetAreaClassnameByAspectRatio( area, attributes )\n\t]);\n};\n\nexport const getAreaBaseClassname = ( area ) => {\n\tconst { nth } = area;\n\n\treturn classnames([\n\t\t'novablocks-grid__area',\n\t\t`novablocks-grid__area--nth-${ nth }`,\n\t]);\n};\n\nexport const getAreaClassnameByAspectRatio = ( area, attributes ) => {\n\treturn classnames([\n\t\t{\n\t\t\t'novablocks-grid__area--portrait': ! isLandscape( area, attributes ),\n\t\t\t'novablocks-grid__area--landscape': isLandscape( area, attributes ),\n\t\t}\n\t]);\n};\n\nexport const getAreaClassnameByWidthRatio = ( widthRatio ) => {\n\treturn classnames([{\n\t\t'novablocks-grid__area--width-xs': widthRatio < 0.3,\n\t\t'novablocks-grid__area--width-s': 0.3 <= widthRatio && widthRatio < 0.5,\n\t\t'novablocks-grid__area--width-m': 0.5 <= widthRatio && widthRatio < 0.66,\n\t\t'novablocks-grid__area--width-l': 0.66 <= widthRatio && widthRatio < 0.80,\n\t\t'novablocks-grid__area--width-xl': 0.80 <= widthRatio && widthRatio < 0.95,\n\t\t'novablocks-grid__area--width-full': 0.95 <= widthRatio,\n\t}]);\n};\n\nexport const getAreaClassnameByHeightRatio = ( heightRatio ) => {\n\treturn classnames([{\n\t\t'novablocks-grid__area--height-xs': heightRatio < 0.34,\n\t\t'novablocks-grid__area--height-s': 0.34 <= heightRatio && heightRatio < 0.5,\n\t\t'novablocks-grid__area--height-m': 0.5 <= heightRatio && heightRatio < 0.66,\n\t\t'novablocks-grid__area--height-l': 0.66 <= heightRatio && heightRatio < 0.80,\n\t\t'novablocks-grid__area--height-xl': 0.80 <= heightRatio,\n\t}])\n};\n\nexport const getGridColumnsAndRows = ( attributes ) => {\n\treturn {\n\t\tgridcolumns: ! attributes.flipcolsrows ? attributes.gridcolumns : attributes.gridrows,\n\t\tgridrows: ! attributes.flipcolsrows ? attributes.gridrows : attributes.gridcolumns,\n\t}\n};\n\nexport const transposeMatrix = ( source ) => {\n\treturn Object.keys( source[0] ).map( function( column ) {\n\t\treturn source.map( function( row ) {\n\t\t\treturn row[column];\n\t\t} );\n\t} );\n};\n","import attributes from \"./grid-generator-attributes\";\nimport GridGeneratorControls from \"./grid-generator-controls\";\n\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\nimport { Fragment } from '@wordpress/element';\n\nconst enableGridGeneratorControls = [\n\t'novablocks/posts-collection',\n];\n\nconst withGridGeneratorControls = createHigherOrderComponent(OriginalComponent => {\n\n\treturn ( props ) => {\n\n\t\tif ( ! enableGridGeneratorControls.includes( props.name ) ) {\n\t\t\treturn <OriginalComponent { ...props } />\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<OriginalComponent { ...props } />\n\t\t\t\t<GridGeneratorControls { ...props } />\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n});\naddFilter( 'editor.BlockEdit', 'novablocks/with-grid-generator-controls', withGridGeneratorControls );\n\nfunction addGridGeneratorAttributes( block ) {\n\n\tif ( ! enableGridGeneratorControls.includes( block.name ) ) {\n\t\treturn block;\n\t}\n\n\tif ( typeof block.attributes === 'undefined' ) {\n\t\tblock.attributes = {};\n\t}\n\n\tblock.attributes = Object.assign( block.attributes, attributes );\n\n\treturn block;\n}\naddFilter( 'blocks.registerBlockType', 'novablocks/add-emphasis-level-attributes', addGridGeneratorAttributes );\n","(function() { module.exports = this[\"novablocks\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"novablocks\"][\"components\"]; }());","(function() { module.exports = this[\"novablocks\"][\"utils\"]; }());","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"hooks\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}